{"version":3,"sources":["webpack://axiosService/webpack/universalModuleDefinition","webpack://axiosService/webpack/bootstrap","webpack://axiosService/./src/utils.js","webpack://axiosService/./node_modules/qs/lib/formats.js","webpack://axiosService/./node_modules/qs/lib/utils.js","webpack://axiosService/./src/config.js","webpack://axiosService/./node_modules/@inkefe/create-decorator/lib/create-decorator.production.min.js","webpack://axiosService/./node_modules/@inkefe/create-decorator/index.js","webpack://axiosService/./src/service-decorators.js","webpack://axiosService/./node_modules/qs/lib/parse.js","webpack://axiosService/./node_modules/qs/lib/stringify.js","webpack://axiosService/./node_modules/qs/lib/index.js","webpack://axiosService/./src/service.js","webpack://axiosService/./src/request-types.js","webpack://axiosService/./src/create.js","webpack://axiosService/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isString","val","isNumber","isUndefined","isObject","_typeof","forEach","merge","result","assignValue","key","arguments","length","deepMerge","target","source","isMustObject","keys","sourceKey","isArray","concat","deepCopy","formatRestFulUrl","resfulUrl","undefined","urlData","reduce","url","replace","joinRootAndPath","path","str","slashStartReplace","toString","combineURLs","obj","fn","extend","to","_from","logger","log","_console","_len","args","Array","_key","console","apply","warn","_console2","_len2","_key2","error","_console3","_len3","_key3","compose","_len4","funcs","_key4","arg","a","b","deprecateWrapper","fnName","readmeUrl","String","percentTwenties","default","formatters","RFC1738","RFC3986","has","hexTable","array","push","toUpperCase","arrayToObject","options","plainObjects","create","assign","acc","combine","compact","queue","prop","refs","item","j","indexOf","pop","compacted","compactQueue","decode","decoder","charset","strWithoutPlus","unescape","decodeURIComponent","e","encode","defaultEncoder","string","escape","$0","parseInt","slice","out","charCodeAt","charAt","isBuffer","constructor","isRegExp","allowPrototypes","mergeTarget","targetItem","STATUS_200","defaults","defaultBaseConfig","isCreateInstance","requestDefaults","msgKey","dataKey","codeKey","successCode","window","t","Symbol","toStringTag","bind","Error","u","f","writable","set","initializer","version","getMockDecoratorByEnv","_createDecorator","_utils","isDev","mockFn","_createDecorator2","apiFn","getMockDecorateByEnv","mockDecorator","getMessageDecorator","mockDecorate","toast","_ref","successMsg","errorMsg","alert","getToast","messageGetter","msg","_","successToast","errorToast","getSuccessMsg","getErrorMsg","then","res","Promise","resolve","err","reject","requestConnector","getMessageDecorate","requestOptsWrapper","requestPathWrapper","opts","preArgs","request","requestToSetParams","customParams","data","config","_extends","params","requestToSetData","customData","decoratorsReadmeUrl","getDelayDecorate","setCustomParamsWrapper","setCustomDataWrapper","setParamsDecorate","setDataDecorate","wait","_len5","_key5","setTimeout","delayDecorate","utils","allowDots","arrayLimit","charsetSentinel","comma","delimiter","depth","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","strictNullHandling","numberStr","fromCharCode","parseKeys","givenKey","child","segment","exec","parent","index","chain","leaf","cleanRoot","isNaN","0","parseObject","TypeError","normalizeParseOptions","tempObj","cleanStr","limit","Infinity","parts","split","skipIndex","part","bracketEqualsPos","pos","parseValues","newObj","formats","arrayPrefixGenerators","brackets","prefix","indices","repeat","pushToArray","arr","valueOrArray","toISO","Date","toISOString","addQueryPrefix","encoder","encodeValuesOnly","formatter","serializeDate","date","skipNulls","stringify","generateArrayPrefix","filter","sort","join","objKeys","values","format","normalizeStringifyOptions","arrayFormat","joined","parse","_config","Service","_classCallCheck","$http","instance","createdRequestStack","createdAxiosInstanceStack","axiosInstance","setHttps","setDefaults","setRequestDefaults","_executeRequestInstance","_executeAxiosInstance","newConfig","newRequestOpts","_this","_this2","GET","POST","DELETE","OPTIONS","PUT","PATCH","HEAD","_requestTypes","createAxiosService","service","getRequestProxy","responseKeys","_service$requestDefau","requestInfo","baseURL","response","responseData","__originResponse","code","message","getRequestsByRoot","_handleAxiosInstances","baseConfigs","_defaultBaseConfig$ba","asyncAxiosInstance","$httpResolve","$httpReady","tid","getInstance","clearTimeout","getInstaceSync","_axiosInstance","getAxiosInstance","getAsyncAxiosInstance","handleAxiosInstances","requestConnect","_request","getRequest","mergeTransform","transforms","requests","moreConfigs","configs","method","post","postXFormData","transformRequest","formData","append","FormData","postXFormString","qs","restFulGet","restFulUrl","restFulPost","delete","put","patch","head","_len6","_key6","jsonp","restFulDelete","postXForm","_create","serviceHocs","axiosService","_create2"],"mappings":"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","file":"axios-service.production.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axiosService\"] = factory();\n\t//libaoxu@inke.cn\n\telse\n\t\troot[\"axiosService\"] = factory();\n})(typeof self !== \"undefined\" ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","export const deepCopy = (target, ...source) => {\n\n}\n\nexport const formatRestFulUrl = (resfulUrl = '', urlData = {}) =>\n  Object.keys(urlData || {})\n    .reduce((url, key) => url.replace(`$${key}`, urlData[key]), resfulUrl || '')\n\nexport const joinRootAndPath = (root, path) => {\n  let slashStartReplace = str => str.replace(/^\\//, '')\n  let slashEndReplace = str => str.replace(/\\/$/, '')\n  return `${slashEndReplace(root)}/${slashStartReplace(path)}`\n}\n\nexport const combineURLs = joinRootAndPath\n\nexport const toString = Object.prototype.toString\nexport const hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nexport const isArray = function (val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is must an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, Array or otherwise false\n */\nexport const isMustObject = function (val) {\n  return toString.call(val) === '[object Object]';\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nexport function isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nexport function isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nexport function isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nexport function isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nexport function forEach (obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /* eslint no-param-reassign:0 */\n    obj = [obj]\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn(obj[i], i, obj)\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (hasOwnProperty.call(obj, key)) {\n        fn(obj[key], key, obj)\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nexport function merge(/* obj1, obj2, obj3, ... */) {\n  var result = {}\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val)\n    } else {\n      result[key] = val\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue)\n  }\n  return result\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nexport function deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {}\n  function assignValue (target, source) {\n    if (isMustObject(target) && isMustObject(source)) {\n      Object.keys(source).forEach(sourceKey => {\n        if (!target[sourceKey]) {\n          target[sourceKey] = source[sourceKey]\n        } else {\n          target[sourceKey] = deepMerge(target[sourceKey], source[sourceKey])\n        }\n      })\n    } else if (isArray(target) && isArray(source)) {\n      target = target.concat(source)\n    } else {\n      target = source\n    }\n    return target\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    result = assignValue(result, arguments[i])\n  }\n\n  return result\n}\n\n/**\n * Mix properties into target object.\n */\nexport const extend = function extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key]\n  }\n  return to\n}\n\nexport const logger = {\n  log (...args) {\n    /* eslint-disable no-console */\n    console.log('[axios-service]', ...args)\n    /* eslint-enable no-console */\n  },\n  warn (...args) {\n    /* eslint-disable no-console */\n    console.warn('[axios-service]', ...args)\n    /* eslint-enable no-console */\n  },\n  error (...args) {\n    /* eslint-disable no-console */\n    console.error('[axios-service]', ...args)\n    /* eslint-enable no-console */\n  },\n}\n\nexport const compose = (...funcs) => {\n  if (funcs.length === 0) {\n    return arg => arg\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0]\n  }\n\n  return funcs.reduce((a, b) => (...args) => a(b(...args)))\n}\n\nexport const deprecateWrapper = (fnName, readmeUrl = 'https://github.com/libaoxu/axios-service') => fn => (...args) => {\n  logger.warn(`🚫${fnName || fn.name}已经废弃, 更多用法请参考: ${readmeUrl}`)\n  return fn(...args)\n}\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","\nexport const STATUS_200 = 200\n\nexport const defaults = {\n  // withCredentials: true\n}\n\nexport const defaultBaseConfig = {\n  root: '/',\n  isCreateInstance: false\n}\n\nexport const requestDefaults = {\n  // server端请求msg\n  msgKey: 'error_msg',\n  // server端数据的key, 注意: 如果这个dataKey不存在, 会将http请求返回的data字段直接返回\n  dataKey: 'data',\n  // server端请求状态的key\n  codeKey: 'dm_error',\n  // server端请求成功的状态, 注意: 是服务端返回的状态码, 不是xhr在\b浏览器端的返回状态\n  successCode: 0\n}\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports[\"create-decorator\"]=t():e[\"create-decorator\"]=t()}(window,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){\"use strict\";r.r(t),r.d(t,\"version\",(function(){return i})),r.d(t,\"createDecorator\",(function(){return o}));var n=function(e){return\"[object Object]\"===Object.prototype.toString.call(e)},o=function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),o=1;o<t;o++)r[o-1]=arguments[o];if(\"function\"!=typeof e)throw Error(\"[create-decorator]: createDecorator请传入一个高阶函数\");return function(t,o,i){if(!i&&\"function\"==typeof t)return e(t);if(i&&!n(i))throw Error(\"[create-decorator]: 装饰器使用错误, descriptor不是描述对象, 请检查@decorator是否为正确装饰器结构: function (target, name, descriptor) { ... }\",\"descriptor: \",i);var c,u=i.configurable,a=i.enumerable,f=(i.writable,i.get),l=i.set,p=i.value,d=i.initializer,s=!!f,b={configurable:u,enumerable:a};return\"function\"==typeof d?b.initializer=function(){if(!c){var t=d.call(this).bind(this);c=e.call.apply(e,[this,t].concat(r))}return function(){for(var e,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return(e=c).call.apply(e,[this].concat(r))}}:(b.get=function(){if(c)return c;var t;if(s)t=f.call(this).bind(this);else{if(\"function\"!=typeof p)throw Error(\"[create-decorator]: descriptor's `value` or `get` property is not a function\",i);t=p.bind(this)}return c=e.call.apply(e,[this,t].concat(r))},b.set=s?l:function(e){return p=e}),b}},i=\"0.1.0\";o.version=i;t.default=o}])}));\n//# sourceMappingURL=create-decorator.production.min.js.map","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./lib/create-decorator.production.min.js');\n} else {\n  module.exports = require('./lib/create-decorator.development.js');\n}\n","/**\n * @file mock装饰器 和 消息装饰器都是工具函数, 与axios-service没有关联, 可装饰任何返回Promise的函数, 这些装饰器更多提供的只是一个装饰的思路, 开发者可自由扩展自定义装饰器, 如异步参数依赖, 单例, loading等等\n * @author libaoxu\n * TODO: 需要使用createDecorator来重写\n */\nimport createDecorator from '@inkefe/create-decorator'\nimport { deprecateWrapper, compose } from './utils'\n\n/**\n * 通过环境变量获取mock装饰器\n * @param {String} isDev 是否为开发环境\n * @return {Function}\n * TODO: 因做了xhr的拦截, 打出logger, 并标记好颜色和分组那种\n */\nexport function getMockDecoratorByEnv (isDev) {\n  /**\n   * mock装饰器\n   * @param {Function} mockFn mock的函数逻辑\n   * @return {Function}\n   */\n  return function mockDecorate (mockFn) {\n    return createDecorator(apiFn => (...args) => {\n      // 开发环境走mock, 如果需要关闭, 需要再apis种删除\n      if (isDev) {\n        return mockFn(...args)\n      } else {\n        return apiFn(...args)\n      }\n    })\n  }\n}\n\n// 名词改为动词, 表示需要创建一下才能生成 decorator\nexport const getMockDecorateByEnv = getMockDecoratorByEnv\n\n/**\n * mock装饰器\n *\n * 注: 因为最新版axios-service 会构建出两个 process.env.NODE_ENV 变量的js, 并在入口index.js判断, 开发模式和构建会引入不同的js, 这样能保证dev模式和prod模式的区分\n *\n * @param {Function} mockFn mock的函数逻辑\n * @return {Function}\n */\nexport const mockDecorator = getMockDecoratorByEnv(process.env.NODE_ENV === 'development')\n\n/**\n * 名词改为动词, 表示需要创建一下才能生成 decorator\n */\nexport const mockDecorate = mockDecorator\n\n/**\n * 消息提示装饰器, 依赖于外层toast对象, 提供toast.success 和 toast.error两个函数\n * @param {Object} toast\n * @param {Function} toast.success\n * @param {Function} toast.error\n */\nexport const getMessageDecorator = toast =>\n  /**\n   * 预制的消息内容\n   *\n   * @param {Object} { successMsg: String|Function, errorMsg: String|Function }\n   * @property {String|Function} successMsg: 成功的消息\n   * @property {String|Function} errorMsg: 失败的消息\n   */\n  ({ successMsg, errorMsg } = {}) => {\n    // eslint-disable-next-line no-console\n    const alert = typeof window !== 'undefined' ? window.alert : console.log\n    const getToast = name => (typeof toast === 'object' && typeof toast[name] === 'function') ? toast[name] : alert\n    const messageGetter = msg => (typeof msg === 'function') ? msg : _ => msg\n    const successToast = getToast('success')\n    const errorToast = getToast('error')\n    const getSuccessMsg = messageGetter(successMsg)\n    const getErrorMsg = messageGetter(errorMsg)\n\n    return createDecorator(fn => (...args) => {\n      return typeof fn === 'function' && fn(...args).then((res) => {\n        const msg = getSuccessMsg(res)\n        msg && successToast(msg)\n        return Promise.resolve(res)\n      }, (err) => {\n        const msg = getErrorMsg(err)\n        msg && errorToast(msg)\n        return Promise.reject(err)\n      })\n    })\n  }\n\n// 名词改为动词, 表示获取到的是decorate 需要创建一下才能生成 decorator\nexport const getMessageDecorate = getMessageDecorator\n\n/**\n * errorMsg 消息高阶函数, 针对绝大多数 error\n * @param {String} msg 预置消息\n *\n * @example\n * class Api {\n *  @messageDecorator({ errorMsg: getErrorMsg('请求失败请重试') })\n *  requestAAA = get('api/requestAAA')\n * }\n *\n * or\n *\n * // 声明好公共变量, 将 '请求失败请重试' 信息curry化起来, 方便多次复用\n * const requestFailErrMsg = getErrorMsg('请求失败请重试')\n *\n * class Api {\n *  @messageDecorator({ errorMsg: requestFailErrMsg})\n *  requestAAA = get('api/requestAAA')\n *\n *  @messageDecorator({ errorMsg: requestFailErrMsg})\n *  requestBBB = get('api/requestBBB')\n * }\n */\nexport const getErrorMsg = (msg = '') => error => error && (error.msg || msg)\n\n/**\n *\n * @param {Function} requestPathWrapper axios-service 的 getRequestsByRoot 产出的requestPathWrapper函数, 如get, post\n * @param {Object} opts 请求配置项对象\n * @property {String} opts.msgKey server端请求msg\n * @property {String} opts.dataKey server端数据的key\n * @property {String} opts.codeKey server端请求状态的key\n * @property {Number} opts.successCode server端请求成功的状态, 注意: 是服务端返回的状态码, 不是xhr在\b浏览器端的返回状态\n *\n * @example\n * const requestOpts = { msgKey: 'Msg', dataKey: 'Code', codeKey: 'Code', successCode: 200 }\n * const get = requestOptsWrapper(baseGet, requestOpts)\n * const post = requestOptsWrapper(basePost, requestOpts)\n *\n * class Apis {\n *  getA = get('/api/getA')\n *  getB = get('/api/getB')\n *  postA = post('/api/postA')\n *  postB = post('/api/postB')\n * }\n */\nexport const requestOptsWrapper = (requestPathWrapper, opts) => (path, ...args) => requestPathWrapper(path, opts, ...args)\n\n/**\n * 将 requestPathWrapper 转换为 request函数,并将其他参数preArgs, 一起透传到装饰函数\n * @param {Function} fn 装饰函数\n *\n * @example\n * const customRequest = requestConnector((request, customArgs) => (data, ...args) => request(...))\n * const customGet = customRequest(get)\n */\nconst requestConnector = fn => (requestPathWrapper, ...preArgs) => (path, ...args) => {\n  const request = requestPathWrapper(path, ...args)\n  return fn(request, ...preArgs)\n}\n\n\nconst requestToSetParams = (request, customParams) => (data, config = {}) => {\n  return typeof request === 'function' && request(data, {\n    ...config,\n    params: {\n      ...config.params,\n      ...customParams\n    },\n  })\n}\n\nconst requestToSetData = (request, customData) => (data, ...args) => request({ ...customData, ...data }, ...args)\n\nconst decoratorsReadmeUrl = 'https://github.com/libaoxu/axios-service#%E6%9B%B4%E5%A4%9A%E8%A3%85%E9%A5%B0%E5%99%A8'\n\n/**\n * @name 满足提前预置自定义params, 不管get or post 都扩展到 Query String Parameters上\n * @param {Function} fn axios-service 的 getRequestsByRoot 产出的requestPathWrapper函数, 如get, post\n * @param {Object} customParams\n * @deprecated\n *\n * @example\n * const customParams = { uid: 123, sid: 'abc' }\n * const postWithAtom = setCustomParamsWrapper(post, customParams)\n * const getWithAtom = setCustomParamsWrapper(get, customParams)\n *\n *\n * class Apis {\n *  getA = getWithAtom('/api/getA')\n *  postB = postWithAtom('/api/postB')\n * }\n */\nexport const setCustomParamsWrapper = compose(\n  deprecateWrapper('setCustomParamsWrapper', decoratorsReadmeUrl),\n  requestConnector\n)(requestToSetParams)\n\n/**\n * data扩展: get请求扩展到 Query String Parameters上, post请求扩展到 payload上\n *\n * @param {Function} fn  axios-service 的 getRequestsByRoot 产出的requestPathWrapper函数, 如get, post\n * @param {Object} customData 预置请求的data\n * @deprecated\n * @example\n * const customData = { uid: 123, sid: 'abc' }\n * const postWithCustomData = setCustomDataWrapper(post, customData)\n * const getWithCustomData = setCustomDataWrapper(get, customData)\n *\n *\n * class Apis {\n *  getA = getWithCustomData('/api/getA')\n *  postB = postWithCustomData('/api/postB')\n * }\n */\nexport const setCustomDataWrapper = compose(\n  deprecateWrapper('setCustomDataWrapper', decoratorsReadmeUrl),\n  requestConnector\n)(requestToSetData)\n\n/**\n * 装饰器目的: 可以将固定数据注入到请求的queryString中\n * @param {Object} customParams 需要在request时注入到queryString中的数据\n * @example\n * class Apis {\n *   @setParamsDecorate({ uid, sid })\n *   getUserInfo = get('/user/info')\n * }\n */\nexport const setParamsDecorate = customParams => createDecorator((fn) => requestToSetParams(fn, customParams))\n\n/**\n * 装饰器目的为: 可以将固定数据注入请求的数据中, post(将数据固定到body体中), get请求(将数据固定到query string中)\n * @param {Object} customData 需要在request时注入到body体中的数据\n * @example\n * class Apis {\n *   @setDataDecorate({ uid, sid })\n *   getUserInfo = get('/user/info')\n * }\n */\nexport const setDataDecorate = customData => createDecorator((fn) => requestToSetData(fn, customData))\n\n/**\n * 根据环境变量获取延时装饰器, 做一个保护机制, 以防production环境也延时, 引起线上bug\n * @param {Boolean} isDev 是否为开发环境\n * web端:\n * const delayDecorate = getDelayDecorate(process.env.NODE_ENV === 'development')\n * RN端:\n * const delayDecorate = getDelayDecorate(__DEV__)\n * 小程序端:\n * const delayDecorate = getDelayDecorate(环境变量名 === dev环境变量值)\n */\nexport const getDelayDecorate = isDev => {\n  return (wait) => createDecorator(fn => (...args) => {\n    if (isDev) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          resolve(fn(...args))\n        }, wait || 0);\n      })\n    } else {\n      return fn(...args)\n    }\n  })\n}\n\n/**\n * 延时装饰器, 已经根据环境变量区分, 适用于web端项目, 小程序和rn端应该使用上面`getDelayDecorate`来创建新的延时装饰器\n * class A {\n *  // 延时3s请求\n *  @delayDecorate(3000)\n *  getUserInfo = get('/user/info')\n * }\n */\nexport const delayDecorate = getDelayDecorate(process.env.NODE_ENV === 'development')\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (val && options.comma && val.indexOf(',') > -1) {\n            val = val.split(',');\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    formatter: formats.formatters[formats['default']],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","import { defaults } from './config'\nimport { extend, deepMerge } from './utils'\n\nexport default class Service {\n  constructor (options = {}) {\n    this.$http = options.instance || null\n    this.requestDefaults = options.requestDefaults || {}\n    this.createdRequestStack = options.createdRequestStack || []\n    this.createdAxiosInstanceStack = options.createdAxiosInstanceStack || []\n  }\n\n  // 注意, service实例初始化时候, 只创建对象, 不需要走init, init函数由外部初始化时候注入axisoInstance\n  init (axiosInstance, options = {}) {\n    this.setHttps(axiosInstance)\n    this.setDefaults(options.defaults)\n    this.setRequestDefaults(options.requestDefaults)\n    this._executeRequestInstance()\n    this._executeAxiosInstance()\n  }\n\n  setHttps ($http) {\n    this.$http = $http || this.$http\n  }\n\n  setDefaults (newConfig) {\n    // 一定要保留this.$http.defaults旧地址引用不变\n    extend(this.$http.defaults, deepMerge(this.$http.defaults, defaults, newConfig))\n  }\n\n  setRequestDefaults (newRequestOpts = {}) {\n    this.requestDefaults = { ...newRequestOpts }\n  }\n\n  _executeRequestInstance () {\n    this.createdRequestStack.forEach(fn => fn && fn(this.$http))\n  }\n\n  _executeAxiosInstance () {\n    this.createdAxiosInstanceStack.forEach(fn => fn && fn(this.$http))\n  }\n}\n","export const GET = 'get'\nexport const POST = 'post'\nexport const DELETE = 'delete'\nexport const OPTIONS = 'options'\nexport const PUT = 'put'\nexport const PATCH = 'patch'\nexport const HEAD = 'head'","/**\n * axios封装, 为了业务层更简洁实用, 不需要判断status 和 codeKey等重复逻辑\n * @author libaoxu\n * @date 2018-05-08\n */\nimport { GET, POST, PATCH, PUT, HEAD, DELETE, OPTIONS } from './request-types'\nimport { formatRestFulUrl, extend, joinRootAndPath, logger, isObject } from './utils'\nimport { STATUS_200, defaults, requestDefaults, UN_PRODUCTION, defaultBaseConfig } from './config'\nimport Service from './service'\nimport qs from 'qs'\n\n\nfunction createAxiosService (instance, options) {\n  const service = new Service({\n    requestDefaults: { ...requestDefaults },\n    createdRequestStack: [],\n    createdAxiosInstanceStack: [],\n    instance,\n    ...options\n  })\n\n  /**\n   * axios实例的装饰器, 主要做响应拦截\n   * @param {Axios} instance axios实例\n   * @param {Object} responseKeys axios响应data的配置项, 包含状态检测等, 详见config.requestDefaults\n   */\n  const getRequestProxy = function getRequestProxy (instance, responseKeys) {\n    const { msgKey, codeKey, dataKey, successCode } = {\n      ...service.requestDefaults,\n      ...responseKeys,\n    }\n\n    /**\n     * 在请求开始和请求结束的, 把状态的判断等重复case做处理\n     *\n     * @param {any} config 请求的config\n     * @returns {Promise} 请求结果\n     * todo loading\n     */\n    return function request (config) {\n      const requestInfo = [`url: ${instance.baseURL}${config.url}`, ', params:', config.params, ', data:', config.data]\n      return instance(config)\n        .then(response => {\n          if (!response) {\n            logger.error(`http请求失败: 失败原因请检查'axios.interceptors.request.use'中第二个函数返回值是否为'Promise.reject'`)\n            return Promise.reject(new Error('http请求失败'))\n          }\n\n          // 返回的data不是object场景\n          if (!isObject(response.data)) {\n            return Promise.resolve(response)\n          }\n\n          const responseData = { ...response.data }\n          if ('response' in responseData) {\n            responseData.__originResponse = response\n          } else {\n            responseData.response = response\n          }\n\n          // 如果不存在dataKey, 则不处理data相关的值, 仅将data返回回去\n          if (!dataKey) {\n            return Promise.resolve(responseData)\n          }\n\n          // 进入到第一个then里的已经是200 ~ 300区间的http status了, 所以不需要再判断status字段是否200了, 详见: https://github.com/axios/axios/blob/master/lib/core/settle.js#L13\n          const data = responseData[dataKey]\n          const msg = responseData[msgKey]\n          const code = responseData[codeKey]\n\n          // 将更多的信息返回给客户端, 避免地址引用引起JSON.stringify报错, 采用挨个变量解构\n          extend(responseData, { data, msg, code, message: msg })\n\n          if (code === successCode) {\n            return Promise.resolve(responseData)\n          } else {\n            logger.error(`codeKey: [${codeKey}] 不匹配: `, `msg: ${msg}, code: ${code} `, ...requestInfo, 'response: ', response)\n            return Promise.reject(responseData)\n          }\n        }, (e) => {\n          logger.error(`请求失败: `, ...requestInfo, '; error : ', e)\n          return Promise.reject(e)\n        })\n    }\n  }\n  const handleAxiosInstances = function handleAxiosInstances (baseConfigs) {\n    const { root, isCreateInstance } = { ...defaultBaseConfig, ...baseConfigs }\n    if (root === undefined) {\n      logger.error('请传入正确的请求根路径, 如: / 或 https://api.github.com')\n    }\n\n    let axiosInstance\n    let asyncAxiosInstance\n    let _request\n    let $httpResolve\n    let timeout = 3000\n    let $httpReady = new Promise((resolve, reject) => {\n      $httpResolve = resolve\n    })\n\n    let tid = setTimeout(() => {\n      if (!axiosInstance) {\n        logger.error('请注入axios实例, 如: axiosService.init(axios, config)')\n      }\n    }, timeout)\n\n    const getInstance = function getInstance () {\n      if (service.$http) {\n        clearTimeout(tid)\n        let instance\n\n        if (isCreateInstance) {\n          instance = service.$http.create({\n            baseURL: root,\n            ...baseConfigs\n          })\n        } else {\n          instance = config => service.$http({ ...config, url: joinRootAndPath(root, config.url) })\n        }\n        instance.baseURL = root\n\n        return instance\n      }\n    }\n\n    const getInstaceSync = function getInstaceSync () {\n      // 处理异步注入axioIntance的情况\n      if (!service.$http) {\n        service.createdAxiosInstanceStack.push($httpResolve)\n        return $httpReady.then(getInstance)\n      }\n    }\n\n    // 保证了, 同一个wrapperRequsetAdaptor, 只创建有一个axiosInstance\n    axiosInstance = getInstance()\n\n    if (!axiosInstance) {\n      // 异步注入axois情况, getInstance也是一次\n      asyncAxiosInstance = getInstaceSync()\n      asyncAxiosInstance.then((_axiosInstance) => {\n        axiosInstance = _axiosInstance\n      })\n    }\n\n    return {\n      getAxiosInstance: _ => axiosInstance,\n      getAsyncAxiosInstance: _ => asyncAxiosInstance,\n    }\n  }\n\n  const jsonWrapperRequest = function jsonWrapperRequest (baseConfigs) {\n    return function getRequest (config) {\n\n    }\n  }\n\n  /**\n   * 根据根路径获取请求函数\n   *\n   * @param {any} baseConfigs axios的基础配置,\n   * @property {String} baseConfigs.root 根路径\n   * @property {Boolean} baseConfigs.isCreateInstance 是否创建新实例, 即: axios.create\n   *\n   * @returns {Object} requests axios请求集合\n   */\n  const getRequestsByRoot = function getRequestsByRoot (baseConfigs = {}) {\n    // 第一步 获取通过init来注入的axios实例\n    const { getAxiosInstance, getAsyncAxiosInstance } = handleAxiosInstances(baseConfigs)\n\n    /**\n     * 第二步 根据每个不同请求配置的responseKeys获取具体request请求的包装器\n     * @param {Object} responseKeys 响应配置项对象\n     * @property {String} opts.msgKey server端请求msg\n     * @property {String} opts.dataKey server端数据的key\n     * @property {String} opts.codeKey server端请求状态的key\n     * @property {Number} opts.successCode server端请求成功的状态, 注意: 是服务端返回的状态码, 不是xhr在\b浏览器端的返回状态\n     */\n    const getRequest = function getRequest (responseKeys) {\n      let _request\n      const axiosInstance = getAxiosInstance()\n      const asyncAxiosInstance = getAsyncAxiosInstance()\n\n      if (axiosInstance) {\n        _request = getRequestProxy(axiosInstance, responseKeys)\n      } else {\n        asyncAxiosInstance && asyncAxiosInstance.then((axiosInstance) => {\n          _request = getRequestProxy(axiosInstance, responseKeys)\n        })\n      }\n\n      return function handleRequest (...params) {\n        if (_request) {\n          return _request(...params)\n        } else {\n          return asyncAxiosInstance.then(() => _request(...params))\n        }\n      }\n    }\n\n    // 具体请求的装饰器, responseKeys => request, 将外层的配置参数进行预处理, 保证requestProxy只直接收axios的config\n    const requestConnect = fn =>\n      /**\n       *\n       * @param {String} url 请求的url后缀\n       * @param {Object} responseKeys 响应的配置项, 详见config.js中的requestDefaults\n       * @param {Object} moreConfigs 该值为自定义的, axios-service不会处理, 该config值会透传到 axios中interceptors中的第一个参数\n       * @return {Function} fn执行结果\n       */\n      (url, responseKeys, ...args) => {\n        const request = getRequest(responseKeys)\n        return fn(url, request, ...args)\n      }\n\n    // merge tranform\n    const mergeTransform = (transforms = [], fn) => {\n      const defaults = options ? options.defaults : service.$http.defaults\n      return transforms.concat((defaults && defaults[fn]) || [])\n    }\n\n    const requests = {\n      getAxiosInstance,\n      getAsyncAxiosInstance,\n      /**\n       * get请求的封装\n       *\n       * @returns {Function} 业务层做请求的函数\n       */\n      get: requestConnect(function axiosServiceGet (url, request, moreConfigs) {\n        /**\n         * @param {Object} params 即get请求需要的数据\n         * @param {Object} config 请求接口的配置项, 详见https://github.com/axios/axios#request-config\n         * 注意: get请求, 第一个参数传params,\n         */\n        return (params, configs = {}) => request({\n          url,\n          method: GET,\n          ...configs,\n          ...moreConfigs,\n          // 保证params优先级最高, 加油💪\n          params: {\n            ...params,\n            ...configs.params,\n          },\n        })\n      }),\n      post: requestConnect(function axiosServicePost (url, request, moreConfigs) {\n        /**\n         * @param {Object} data 即post请求需要的数据\n         * 注意: post请求, 第一个参数传data\n         */\n        return (data, configs) => request({ url, method: POST, data, ...configs, ...moreConfigs })\n      }),\n      postXFormData: requestConnect(function axiosServicePostXForm (url, request, moreConfigs) {\n        return (data, configs = {}) => {\n          return request({\n            url,\n            method: POST,\n            data,\n            transformRequest: mergeTransform([function (data = {}, headers) {\n              return Object.keys(data)\n                .reduce((formData, key) => {\n                  formData.append(key, data[key])\n                  return formData\n                }, new FormData())\n            }], 'transformRequest'),\n            // FormData数据不要设置headers, 即使设置Content-Type, axios在FormData类型时候也会删除掉这个key, 详见: https://github.com/axios/axios/blob/master/lib/adapters/xhr.js#L16\n            // headers: {\n            //   'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\n            //   ...configs.headers\n            // },\n            ...configs,\n            ...moreConfigs\n          })\n        }\n      }),\n      postXFormString: requestConnect(function axiosServicePostXFormString (url, request, moreConfigs) {\n        return (data, configs = {}) => {\n          return request({\n            url,\n            method: POST,\n            data,\n            transformRequest: mergeTransform([function (data = {}, headers) {\n              return qs.stringify(data)\n            }], 'transformRequest'),\n            // post请求: 浏览器会自动识别出Content-Type为: application/x-www-form-urlencoded, FormData有其他类型, 如: multipart/form-data\n            // 如果是json情况, axios在defaults.transformRequest中会将headers中的Content-Type设置为'application/json', 并将data对象JSON.strigify, 这样浏览器才能识别出Request Payload, 详见: https://github.com/axios/axios/blob/master/lib/defaults.js#L50\n            // 如果传入的是字符串'key1=value1&key2=value2', 浏览器会直接识别出为Form Data数据结构\n            // headers: {\n            //   'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\n            //   ...configs.headers\n            // },\n            ...configs,\n            ...moreConfigs\n          })\n        }\n      }),\n      /**\n       * resFul用的get请求\n       *\n       * @param {String} restFulUrl 请求的url, 且与上面的url配置有区别, 详见readme.md\n       * @param {Object} responseKeys 请求配置项\n       * @returns {Function} 具体请求的函数\n       */\n      restFulGet: requestConnect(function axiosServiceRestFulGet (restFulUrl, request, moreConfigs) {\n        /**\n         * @param {Object} urlData restFul中需要替换url的值, 拼接的过程serviceProxy会处理\n         * @param {Object} params\n         * @param {Object} configs 请求配置项\n         */\n        return (urlData, params, configs) =>\n          request({ url: formatRestFulUrl(restFulUrl, urlData), method: GET, params, ...configs, ...moreConfigs })\n      }),\n      restFulPost: requestConnect(function axiosServicePost (restFulUrl, request, moreConfigs) {\n        return (urlData, data, configs) =>\n          request({ url: formatRestFulUrl(restFulUrl, urlData), method: POST, data, ...configs, ...moreConfigs })\n      }),\n      delete: requestConnect(function axiosServiceDelete (restFulUrl, request, moreConfigs) {\n        return (urlData, data, configs) =>\n          request({ url: formatRestFulUrl(restFulUrl, urlData), method: DELETE, data, ...configs, ...moreConfigs })\n      }),\n      put: requestConnect(function axiosServicePut (restFulUrl, request, moreConfigs) {\n        return (urlData, data, configs) =>\n          request({ url: formatRestFulUrl(restFulUrl, urlData), method: PUT, data, ...configs, ...moreConfigs })\n      }),\n      patch: requestConnect(function axiosServicePatch (restFulUrl, request, ...moreConfigs) {\n        return (urlData, data, configs) =>\n          request({ url: formatRestFulUrl(restFulUrl, urlData), method: PATCH, data, ...configs, ...moreConfigs })\n      }),\n      head: requestConnect(function axiosServiceHead (url, request, ...moreConfigs) {\n        return configs => request({ url, method: HEAD, ...configs, ...moreConfigs })\n      }),\n      options: requestConnect(function axiosServiceOptions (url, request, ...moreConfigs) {\n        return configs => request({ url, method: OPTIONS, ...configs, ...moreConfigs })\n      }),\n      request: requestConnect(function axiosServiceRequest (url, request, ...moreConfigs) {\n        return configs => request({ url, ...configs, ...moreConfigs })\n      }),\n      // todo\n      jsonp: requestConnect(function axiosServiceJsonp (url, request, ...moreConfigs) {\n\n      })\n    }\n\n    requests.restFulDelete = requests.delete\n    // 兼容老版\n    requests.postXForm = requests.postXFormData\n\n    return requests\n  }\n\n  service.getRequestsByRoot = getRequestsByRoot\n  service.create = createAxiosService\n\n  return service\n}\n\nexport default createAxiosService\n","/**\n * axios封装, 为了业务层更简洁实用, 不需要判断status 和 codeKey等重复逻辑\n * @author libaoxu\n * @date 2018-05-08\n */\nimport createAxiosService from './create'\nimport * as serviceHocs from './service-decorators'\n\nconst { getMessageDecorator, getMockDecoratorByEnv, mockDecorator, getMockDecorateByEnv, getMessageDecorate, mockDecorate } = serviceHocs\n\nconst axiosService = createAxiosService()\nconst getRequestsByRoot = axiosService.getRequestsByRoot\nconst version = __VERSION__\n\nexport {\n  axiosService,\n  getRequestsByRoot,\n  createAxiosService,\n  getMessageDecorator,\n  getMockDecoratorByEnv,\n  mockDecorator,\n  getMessageDecorate,\n  getMockDecorateByEnv,\n  mockDecorate,\n  serviceHocs,\n  version\n}\n\naxiosService.createAxiosService = createAxiosService\naxiosService.getMessageDecorator = getMessageDecorator\naxiosService.getMockDecoratorByEnv = getMockDecoratorByEnv\naxiosService.mockDecorator = mockDecorator\naxiosService.serviceHocs = serviceHocs\naxiosService.version = version\n\nexport default axiosService\n"],"sourceRoot":""}