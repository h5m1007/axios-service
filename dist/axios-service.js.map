{"version":3,"sources":["webpack://axiosService/webpack/universalModuleDefinition","webpack://axiosService/webpack/bootstrap","webpack://axiosService/./src/index.js","webpack://axiosService/./src/request-types.js","webpack://axiosService/./src/utils.js","webpack://axiosService/./src/config.js","webpack://axiosService/./src/service.js"],"names":["service","Service","requestDefaults","createdRequestStack","createdAxiosInstanceStack","getWrapperRequestByInstance","instance","getRequestWithOptions","requestOpts","autoLoading","msgKey","codeKey","dataKey","successCode","request","opts","requestInfo","baseURL","url","params","data","then","status","response","apiRes","config","STATUS_200","Promise","resolve","msg","code","error","reject","e","wrapperRequsetAdaptor","baseConfigs","root","isCreateInstance","axiosInstance","asyncAxiosInstance","_request","$httpResolve","timeout","$httpReady","tid","setTimeout","console","getInstance","$http","clearTimeout","create","getInstaceSync","push","getRequest","_getRequestByOpts","_axiosInstance","wrapperRequest","requestDecorator","getAxiosInstance","getAsyncAxiosInstance","jsonWrapperRequest","getRequestsByRoot","requests","get","axiosServiceGet","configs","method","GET","post","axiosServicePost","POST","postXForm","axiosServicePostXForm","transformRequest","headers","Object","keys","reduce","formData","key","append","FormData","restFulGet","axiosServiceRestFulGet","restFulUrl","urlData","restFulPost","delete","axiosServiceDelete","DELETE","put","axiosServicePut","PUT","patch","axiosServicePatch","PATCH","head","axiosServiceHead","HEAD","options","axiosServiceOptions","OPTIONS","axiosServiceRequest","jsonp","axiosServiceJsonp","isString","isNumber","isUndefined","isObject","forEach","merge","deepMerge","deepCopy","target","formatRestFulUrl","resfulUrl","replace","_toString","prototype","toString","isArray","val","call","obj","fn","i","l","length","hasOwnProperty","result","assignValue","arguments","extend","to","_from","defaults","setHttps","setDefaults","setRequestDefaults","_executeRequestInstance","_executeAxiosInstance","newConfig","newRequestOpts"],"mappings":"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","file":"axios-service.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axiosService\"] = factory();\n\t//libaoxu\n\telse\n\t\troot[\"axiosService\"] = factory();\n})(typeof self !== \"undefined\" ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * axios封装, 为了业务层更简洁实用, 不需要判断status 和 codeKey等重复逻辑\n * @author libaoxu\n * @date 2018-05-08\n */\nimport { GET, POST, PATCH, PUT, HEAD, DELETE, OPTIONS } from './request-types'\nimport { formatRestFulUrl, extend } from './utils'\nimport { STATUS_200, defaults, requestDefaults } from './config'\nimport Service from './service'\n\nexport const service = new Service({\n  requestDefaults,\n  createdRequestStack: [],\n  createdAxiosInstanceStack: []\n})\n\nconst getWrapperRequestByInstance = function getWrapperRequestByInstance (instance) {\n  return function getRequestWithOptions (requestOpts) {\n    const { autoLoading, msgKey, codeKey, dataKey, successCode } = {\n      ...service.requestDefaults,\n      ...requestOpts,\n    }\n\n    /**\n     * 请求开始和请求结束的封装, 把状态的判断等重复case做处理\n     * \n     * @param {any} opts 请求的config\n     * @returns {Promise} 请求结果\n     * todo loading\n     */\n    return function request (opts) {\n      const requestInfo =  [`url: ${instance.baseURL}${opts.url}`, ', params:', opts.params, ', data:', opts.data]\n\n      return instance(opts)\n        .then(response => {\n          const { status, data: apiRes, config } = response\n\n          if (status === STATUS_200) {\n            // 如果不存在dataKey, 则不处理data相关的值, 仅将data返回回去\n            if (!dataKey) {\n              return Promise.resolve(apiRes)\n            }\n            let data = apiRes[dataKey]\n            let msg = apiRes[msgKey]\n            let code = apiRes[codeKey]\n\n            extend(apiRes, { data, msg, code })\n            \n            if (code === successCode) {\n              return Promise.resolve(apiRes)\n            } else {\n              console.error(`[service请求错误], msg: ${msg}, code: ${code} `, ...requestInfo)\n              return Promise.reject(apiRes)\n            }\n          }\n        }, (e) => {\n          console.error(`[service请求失败]: `, ...requestInfo)\n          return Promise.reject(e)\n        \n        })\n    }\n  }\n}\n\nconst wrapperRequsetAdaptor = function wrapperRequsetAdaptor (baseConfigs) {\n  const { root = '/', isCreateInstance } = baseConfigs\n  let axiosInstance\n  let asyncAxiosInstance\n  let _request\n  let $httpResolve\n  let timeout = 3000\n  let $httpReady = new Promise((resolve, reject) => {\n    $httpResolve = resolve\n  })\n  \n  let tid = setTimeout(() => {\n    if (!axiosInstance) {\n      console.error('请注入axios实例, 如: axiosService.init(axios, config)')\n    }\n  }, timeout)\n  \n  const getInstance = function getInstance () {\n    if (service.$http) {\n      clearTimeout(tid)\n      let instance\n\n      if (isCreateInstance) {\n        instance = service.$http.create({\n          baseURL: root,\n          ...baseConfigs\n        })\n      } else {\n        instance = opts => service.$http({ ...opts, url: root + opts.url })\n      }\n      instance.baseURL = root\n\n      return instance\n    }\n  }\n\n  const getInstaceSync = function getInstaceSync () {\n    // 处理异步注入axioIntance的情况\n    if (!service.$http) {\n      service.createdAxiosInstanceStack.push($httpResolve)\n      return $httpReady.then(getInstance)\n    }\n  }\n\n  const getRequest = (axiosInstance, requestOpts) => {\n    const _getRequestByOpts = getWrapperRequestByInstance(axiosInstance)\n    return _getRequestByOpts(requestOpts)\n  }\n  \n  // 保证了, 同一个wrapperRequsetAdaptor, 只创建有一个axiosInstance\n  axiosInstance = getInstance()\n\n  if (!axiosInstance) {\n    // 异步注入axois情况, getInstance也是一次\n    asyncAxiosInstance = getInstaceSync()\n    asyncAxiosInstance.then((_axiosInstance) => {\n      axiosInstance = _axiosInstance\n    })\n  }\n\n  const wrapperRequest = function wrapperRequest (requestOpts) {\n    let _request\n    if (axiosInstance) {\n      _request = getRequest(axiosInstance, requestOpts)\n    } else {\n      asyncAxiosInstance && asyncAxiosInstance.then((axiosInstance) => {\n        _request = getRequest(axiosInstance, requestOpts)\n      })\n    }\n\n    return function requestDecorator (...params) {\n      if (_request) {\n        return _request(...params)\n      } else {\n        return asyncAxiosInstance.then(() => _request(...params))\n      }\n    }\n  }\n\n  return {\n    getAxiosInstance: _ => axiosInstance,\n    getAsyncAxiosInstance: _ => asyncAxiosInstance,\n    wrapperRequest\n  }\n}\n\nconst jsonWrapperRequest = function jsonWrapperRequest (baseConfigs) {\n  return function wrapperRequest (opts) {\n    \n  }\n}\n\n/**\n * 根据根路径获取请求函数\n * \n * @param {any} baseConfigs axios的基础配置, \n * @property {String} baseConfigs.root 根路劲\n * @property {Boolean} baseConfigs.isCreateInstance 是否创建新实例, 即: axios.create\n * \n * @returns {Object} requests axios请求集合\n */\nexport const getRequestsByRoot = function getRequestsByRoot (baseConfigs = {}) {\n  const { wrapperRequest, getAxiosInstance, getAsyncAxiosInstance } = wrapperRequsetAdaptor(baseConfigs)\n\n  const requests = {\n    getAxiosInstance,\n    getAsyncAxiosInstance,\n    /**\n     * get请求的封装\n     * \n     * @param {String} url 请求的url后缀\n     * @param {Object} requestOpts 请求的配置项, 详见config.js中的requestDefaults\n     * @returns {Function} 业务层做请求的函数\n     */\n    get: function axiosServiceGet (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      /**\n       * @param {Object} params 即get请求需要的数据\n       * @param {Object} config 请求接口的配置项, 详见https://github.com/axios/axios#request-config\n       * 注意: get请求, 第一个参数传params, \n       */\n      return (params, configs) => request({ url, method: GET, params, ...configs })\n    },\n    post: function axiosServicePost (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      /**\n       * @param {Object} data 即post请求需要的数据\n       * 注意: post请求, 第一个参数传data\n       */\n      return (data, configs) => request({ url, method: POST, data, ...configs })\n    },\n    postXForm: function axiosServicePostXForm (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (data, configs = {}) => {\n        return request({ \n          url, \n          method: POST, \n          data,\n          transformRequest: [function (data = {}, headers) {\n            // if (typeof window === 'undefined') {\n            //   console.error('application/x-www-form-urlencoded类型, 请在客户端请求, url:', url)\n            // }\n  \n            return Object.keys(data)\n              .reduce((formData, key) => {\n                formData.append(key, data[key])\n                return formData\n              }, new FormData())\n          }], \n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            ...configs.headers\n          },\n          ...configs\n        })\n      }\n    },\n    /**\n     * resFul用的get请求\n     * \n     * @param {String} restFulUrl 请求的url, 且与上面的url配置有区别, 详见readme.md\n     * @param {Object} requestOpts 请求配置项\n     * @returns {Function} 具体请求的函数\n     */\n    restFulGet: function axiosServiceRestFulGet (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      /**\n       * @param {Object} urlData restFul中需要替换url的值, 拼接的过程serviceProxy会处理\n       * @param {Object} params \n       * @param {Object} configs 请求配置项\n       */\n      return (urlData, params, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: GET, params, ...configs })\n    },\n    restFulPost: function axiosServicePost (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: POST, data, ...configs })\n    },\n    delete: function axiosServiceDelete (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: DELETE, data, ...configs })\n    },\n    put: function axiosServicePut (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: PUT, data, ...configs })\n    },\n    patch: function axiosServicePatch (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: PATCH, data, ...configs })\n    },\n    head: function axiosServiceHead (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return configs => request({ url, method: HEAD, ...configs })\n    },\n    options: function axiosServiceOptions (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return configs => request({ url, method: OPTIONS, ...configs })\n    },\n    request: function axiosServiceRequest (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return configs => request({ url, ...configs })\n    },\n    // todo\n    jsonp: function axiosServiceJsonp (url, requestOpts) {\n\n    }\n  }\n\n  return requests\n}\n\nservice.getRequestsByRoot = getRequestsByRoot\n\nexport default service","export const GET = 'get'\nexport const POST = 'post'\nexport const DELETE = 'delete'\nexport const OPTIONS = 'options'\nexport const PUT = 'put'\nexport const PATCH = 'patch'\nexport const HEAD = 'head'","export const deepCopy = (target, ...source) => {\n\n}\n\n\nexport const formatRestFulUrl = (resfulUrl = '', urlData = {}) => \n  Object.keys(urlData || {})\n    .reduce((url, key) => url.replace(`$${key}`, urlData[key]), resfulUrl || '')\n    \n\nconst _toString = Object.prototype.toString\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nexport const isArray = function (val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nexport function isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nexport function isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nexport function isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nexport function isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nexport function forEach (obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj]\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj)\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj)\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nexport function merge(/* obj1, obj2, obj3, ... */) {\n  var result = {}\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val)\n    } else {\n      result[key] = val\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue)\n  }\n  return result\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nexport function deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {}\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val)\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val)\n    } else {\n      result[key] = val\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue)\n  }\n  return result\n}\n\n/**\n * Mix properties into target object.\n */\nexport const extend = function extend (to, _from) {\n for (var key in _from) {\n   to[key] = _from[key]\n }\n return to\n}","\nexport const STATUS_200 = 200\n\nexport const defaults = {\n  // withCredentials: true\n}\n\nexport const requestDefaults = {\n  // todo\n  autoLoading: true,\n  // server端请求msg\n  msgKey: 'error_msg',\n  // server端数据的key\n  dataKey: 'data',\n  // server端请求状态的key\n  codeKey: 'dm_error',\n  // server端请求成功的状态, 注意: 是服务端返回的状态码, 不是xhr在\b浏览器端的返回状态\n  successCode: 0 \n}","import { codes, defaults, requestDefaults } from './config'\nimport { extend, deepMerge, merge } from './utils'\n\nexport default class Service {\n  constructor (options = {}) {\n    this.$http = null\n    this.requestDefaults = options.requestDefaults || {}\n    this.createdRequestStack = options.createdRequestStack || []\n    this.createdAxiosInstanceStack = options.createdAxiosInstanceStack || []\n  }\n  \n  // 注意, service实例初始化时候, 只创建对象, 不需要走init, init函数由外部初始化时候注入axisoInstance\n  init (axiosInstance, options = {}) {\n    this.setHttps(axiosInstance)\n    this.setDefaults(options.defaults)\n    this.setRequestDefaults(options.requestDefaults)\n    this._executeRequestInstance()\n    this._executeAxiosInstance()\n  }\n  \n  setHttps ($http) {\n    this.$http = $http || this.$http\n  }\n  \n  setDefaults (newConfig) {\n    deepMerge(this.$http.defaults, { ...defaults, ...newConfig })\n  }\n  \n  setRequestDefaults (newRequestOpts = {}) {\n    extend(this.requestDefaults, newRequestOpts)\n  }\n\n  _executeRequestInstance () {\n    this.createdRequestStack.forEach(fn => fn(this.$http))\n  }\n\n  _executeAxiosInstance () {\n    this.createdAxiosInstanceStack.forEach(fn => fn(this.$http)) \n  }\n}"],"sourceRoot":""}