{"version":3,"sources":["webpack://axiosService/webpack/universalModuleDefinition","webpack://axiosService/webpack/bootstrap","webpack://axiosService/./src/config.js","webpack://axiosService/./src/utils.js","webpack://axiosService/./src/service.js","webpack://axiosService/./src/request-types.js","webpack://axiosService/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","STATUS_200","defaults","requestDefaults","autoLoading","msgKey","dataKey","codeKey","successCode","isString","val","isNumber","isUndefined","isObject","_typeof","forEach","merge","result","assignValue","key","arguments","length","deepMerge","deepCopy","target","formatRestFulUrl","resfulUrl","undefined","urlData","keys","reduce","url","replace","joinRootAndPath","path","str","slashStartReplace","toString","isArray","obj","fn","extend","to","_from","logger","log","_console","_len","args","Array","_key","console","apply","concat","error","_console2","_len2","_key2","_config","_utils","Service","options","_classCallCheck","$http","createdRequestStack","createdAxiosInstanceStack","axiosInstance","setHttps","setDefaults","setRequestDefaults","_executeRequestInstance","_executeAxiosInstance","newConfig","_extends","newRequestOpts","_this","_this2","GET","POST","DELETE","OPTIONS","PUT","PATCH","HEAD","_requestTypes","_service","service","wrapperRequsetAdaptor","baseConfigs","_baseConfigs$root","isCreateInstance","asyncAxiosInstance","$httpResolve","$httpReady","Promise","resolve","reject","tid","setTimeout","getInstance","clearTimeout","instance","create","baseURL","opts","getRequest","requestOpts","_service$requestDefau","requestInfo","params","data","then","response","status","apiRes","config","msg","code","e","push","getInstaceSync","_axiosInstance","getAxiosInstance","_","getAsyncAxiosInstance","wrapperRequest","_request","getRequestsByRoot","_wrapperRequsetAdapto","moreConfigs","request","configs","method","post","postXForm","transformRequest","formData","append","FormData","headers","Content-Type","restFulGet","restFulUrl","restFulPost","delete","put","patch","head","_len3","_key3","_len4","_key4","_len5","_key5","jsonp","getMockDecoratorByEnv","isDev","mockFn","descriptor","apiFn","applyApiWithEnv","initialFunc","initializer"],"mappings":"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","file":"axios-service.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axiosService\"] = factory();\n\t//libaoxu\n\telse\n\t\troot[\"axiosService\"] = factory();\n})(typeof self !== \"undefined\" ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","\nexport const STATUS_200 = 200\n\nexport const defaults = {\n  // withCredentials: true\n}\n\nexport const requestDefaults = {\n  // todo\n  autoLoading: true,\n  // server端请求msg\n  msgKey: 'error_msg',\n  // server端数据的key\n  dataKey: 'data',\n  // server端请求状态的key\n  codeKey: 'dm_error',\n  // server端请求成功的状态, 注意: 是服务端返回的状态码, 不是xhr在\b浏览器端的返回状态\n  successCode: 0 \n}","export const deepCopy = (target, ...source) => {\n\n}\n\n\nexport const formatRestFulUrl = (resfulUrl = '', urlData = {}) => \n  Object.keys(urlData || {})\n    .reduce((url, key) => url.replace(`$${key}`, urlData[key]), resfulUrl || '')\n    \nexport const joinRootAndPath = (root, path) => {\n  let slashStartReplace = str => str.replace(/^\\//, '') \n  let slashEndReplace = str => str.replace(/\\/$/, '') \n  return `${slashEndReplace(root)}/${slashStartReplace(path)}`\n}\n\n\nconst _toString = Object.prototype.toString\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nexport const isArray = function (val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nexport function isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nexport function isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nexport function isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nexport function isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nexport function forEach (obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /* eslint no-param-reassign:0 */\n    obj = [obj]\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn(obj[i], i, obj)\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn(obj[key], key, obj)\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nexport function merge(/* obj1, obj2, obj3, ... */) {\n  var result = {}\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val)\n    } else {\n      result[key] = val\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue)\n  }\n  return result\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nexport function deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {}\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val)\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val)\n    } else {\n      result[key] = val\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue)\n  }\n  return result\n}\n\n/**\n * Mix properties into target object.\n */\nexport const extend = function extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key]\n  }\n  return to\n}\n\nexport const logger = {\n  log (...args) {\n    /* eslint-disable no-console */\n    console.log('[axios-service]', ...args)\n    /* eslint-enable no-console */\n  },\n  error (...args) {\n    /* eslint-disable no-console */\n    console.error('[axios-service]', ...args)\n    /* eslint-enable no-console */\n  },\n}","import { codes, defaults, requestDefaults } from './config'\nimport { extend, deepMerge, merge } from './utils'\n\nexport default class Service {\n  constructor (options = {}) {\n    this.$http = null\n    this.requestDefaults = options.requestDefaults || {}\n    this.createdRequestStack = options.createdRequestStack || []\n    this.createdAxiosInstanceStack = options.createdAxiosInstanceStack || []\n  }\n  \n  // 注意, service实例初始化时候, 只创建对象, 不需要走init, init函数由外部初始化时候注入axisoInstance\n  init (axiosInstance, options = {}) {\n    this.setHttps(axiosInstance)\n    this.setDefaults(options.defaults)\n    this.setRequestDefaults(options.requestDefaults)\n    this._executeRequestInstance()\n    this._executeAxiosInstance()\n  }\n  \n  setHttps ($http) {\n    this.$http = $http || this.$http\n  }\n  \n  setDefaults (newConfig) {\n    extend(this.$http.defaults, { ...defaults, ...newConfig })\n  }\n  \n  setRequestDefaults (newRequestOpts = {}) {\n    extend(this.requestDefaults, newRequestOpts)\n  }\n\n  _executeRequestInstance () {\n    this.createdRequestStack.forEach(fn => fn(this.$http))\n  }\n\n  _executeAxiosInstance () {\n    this.createdAxiosInstanceStack.forEach(fn => fn(this.$http)) \n  }\n}","export const GET = 'get'\nexport const POST = 'post'\nexport const DELETE = 'delete'\nexport const OPTIONS = 'options'\nexport const PUT = 'put'\nexport const PATCH = 'patch'\nexport const HEAD = 'head'","/**\n * axios封装, 为了业务层更简洁实用, 不需要判断status 和 codeKey等重复逻辑\n * @author libaoxu\n * @date 2018-05-08\n */\nimport { GET, POST, PATCH, PUT, HEAD, DELETE, OPTIONS } from './request-types'\nimport { formatRestFulUrl, extend, joinRootAndPath, logger } from './utils'\nimport { STATUS_200, defaults, requestDefaults, UN_PRODUCTION } from './config'\nimport Service from './service'\n\nexport const service = new Service({\n  requestDefaults,\n  createdRequestStack: [],\n  createdAxiosInstanceStack: []\n})\n\nconst getWrapperRequestByInstance = function getWrapperRequestByInstance (instance) {\n  return function getRequestWithOptions (requestOpts) {\n    const { msgKey, codeKey, dataKey, successCode } = {\n      ...service.requestDefaults,\n      ...requestOpts,\n    }\n\n    /**\n     * 请求开始和请求结束的封装, 把状态的判断等重复case做处理\n     * \n     * @param {any} opts 请求的config\n     * @returns {Promise} 请求结果\n     * todo loading\n     */\n    return function request (opts) {\n      const requestInfo = [`url: ${instance.baseURL}${opts.url}`, ', params:', opts.params, ', data:', opts.data]\n\n      return instance(opts)\n        .then(response => {\n          const { status, data: apiRes, config } = response\n\n          if (status === STATUS_200) {\n            // 如果不存在dataKey, 则不处理data相关的值, 仅将data返回回去\n            if (!dataKey) {\n              return Promise.resolve(apiRes)\n            }\n            let data = apiRes[dataKey]\n            let msg = apiRes[msgKey]\n            let code = apiRes[codeKey]\n\n            extend(apiRes, { data, msg, code })\n            \n            if (code === successCode) {\n              return Promise.resolve(apiRes)\n            } else {\n              logger.error(`请求错误: msg: ${msg}, code: ${code} `, ...requestInfo)\n              return Promise.reject(apiRes)\n            }\n          }\n        }, (e) => {\n          logger.error(`请求失败: `, ...requestInfo)\n          return Promise.reject(e)\n        })\n    }\n  }\n}\n\nconst wrapperRequsetAdaptor = function wrapperRequsetAdaptor (baseConfigs) {\n  const { root = '/', isCreateInstance } = baseConfigs\n  let axiosInstance\n  let asyncAxiosInstance\n  let _request\n  let $httpResolve\n  let timeout = 3000\n  let $httpReady = new Promise((resolve, reject) => {\n    $httpResolve = resolve\n  })\n  \n  let tid = setTimeout(() => {\n    if (!axiosInstance) {\n      logger.error('请注入axios实例, 如: axiosService.init(axios, config)')\n    }\n  }, timeout)\n  \n  const getInstance = function getInstance () {\n    if (service.$http) {\n      clearTimeout(tid)\n      let instance\n\n      if (isCreateInstance) {\n        instance = service.$http.create({\n          baseURL: root,\n          ...baseConfigs\n        })\n      } else {\n        instance = opts => service.$http({ ...opts, url: joinRootAndPath(root, opts.url) })\n      }\n      instance.baseURL = root\n\n      return instance\n    }\n  }\n\n  const getInstaceSync = function getInstaceSync () {\n    // 处理异步注入axioIntance的情况\n    if (!service.$http) {\n      service.createdAxiosInstanceStack.push($httpResolve)\n      return $httpReady.then(getInstance)\n    }\n  }\n\n  const getRequest = (axiosInstance, requestOpts) => {\n    const _getRequestByOpts = getWrapperRequestByInstance(axiosInstance)\n    return _getRequestByOpts(requestOpts)\n  }\n  \n  // 保证了, 同一个wrapperRequsetAdaptor, 只创建有一个axiosInstance\n  axiosInstance = getInstance()\n\n  if (!axiosInstance) {\n    // 异步注入axois情况, getInstance也是一次\n    asyncAxiosInstance = getInstaceSync()\n    asyncAxiosInstance.then((_axiosInstance) => {\n      axiosInstance = _axiosInstance\n    })\n  }\n\n  const wrapperRequest = function wrapperRequest (requestOpts) {\n    let _request\n    if (axiosInstance) {\n      _request = getRequest(axiosInstance, requestOpts)\n    } else {\n      asyncAxiosInstance && asyncAxiosInstance.then((axiosInstance) => {\n        _request = getRequest(axiosInstance, requestOpts)\n      })\n    }\n\n    return function requestDecorator (...params) {\n      if (_request) {\n        return _request(...params)\n      } else {\n        return asyncAxiosInstance.then(() => _request(...params))\n      }\n    }\n  }\n\n  return {\n    getAxiosInstance: _ => axiosInstance,\n    getAsyncAxiosInstance: _ => asyncAxiosInstance,\n    wrapperRequest\n  }\n}\n\nconst jsonWrapperRequest = function jsonWrapperRequest (baseConfigs) {\n  return function wrapperRequest (opts) {\n    \n  }\n}\n\n/**\n * 根据根路径获取请求函数\n * \n * @param {any} baseConfigs axios的基础配置, \n * @property {String} baseConfigs.root 根路劲\n * @property {Boolean} baseConfigs.isCreateInstance 是否创建新实例, 即: axios.create\n * \n * @returns {Object} requests axios请求集合\n */\nexport const getRequestsByRoot = function getRequestsByRoot (baseConfigs = {}) {\n  const { wrapperRequest, getAxiosInstance, getAsyncAxiosInstance } = wrapperRequsetAdaptor(baseConfigs)\n\n  const requests = {\n    getAxiosInstance,\n    getAsyncAxiosInstance,\n    /**\n     * get请求的封装\n     * \n     * @param {String} url 请求的url后缀\n     * @param {Object} requestOpts 请求的配置项, 详见config.js中的requestDefaults\n     * @param {Object} moreConfigs 该值为自定义的, axios-service不会处理, 该config值会透传到 axios中interceptors中的第一个参数\n     * @returns {Function} 业务层做请求的函数\n     */\n    get: function axiosServiceGet (url, requestOpts, moreConfigs) {\n      const request = wrapperRequest(requestOpts)\n      /**\n       * @param {Object} params 即get请求需要的数据\n       * @param {Object} config 请求接口的配置项, 详见https://github.com/axios/axios#request-config\n       * 注意: get请求, 第一个参数传params, \n       */\n      return (params, configs) => request({ url, method: GET, params, ...configs, ...moreConfigs })\n    },\n    post: function axiosServicePost (url, requestOpts, moreConfigs) {\n      const request = wrapperRequest(requestOpts)\n      /**\n       * @param {Object} data 即post请求需要的数据\n       * 注意: post请求, 第一个参数传data\n       */\n      return (data, configs) => request({ url, method: POST, data, ...configs, ...moreConfigs })\n    },\n    postXForm: function axiosServicePostXForm (url, requestOpts, moreConfigs) {\n      const request = wrapperRequest(requestOpts)\n      return (data, configs = {}) => {\n        return request({ \n          url, \n          method: POST, \n          data,\n          transformRequest: [function (data = {}, headers) {\n            // if (typeof window === 'undefined') {\n            //   console.error('application/x-www-form-urlencoded类型, 请在客户端请求, url:', url)\n            // }\n  \n            return Object.keys(data)\n              .reduce((formData, key) => {\n                formData.append(key, data[key])\n                return formData\n              }, new FormData())\n          }], \n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            ...configs.headers\n          },\n          ...configs,\n          ...moreConfigs\n        })\n      }\n    },\n    /**\n     * resFul用的get请求\n     * \n     * @param {String} restFulUrl 请求的url, 且与上面的url配置有区别, 详见readme.md\n     * @param {Object} requestOpts 请求配置项\n     * @returns {Function} 具体请求的函数\n     */\n    restFulGet: function axiosServiceRestFulGet (restFulUrl, requestOpts, moreConfigs) {\n      const request = wrapperRequest(requestOpts)\n      /**\n       * @param {Object} urlData restFul中需要替换url的值, 拼接的过程serviceProxy会处理\n       * @param {Object} params \n       * @param {Object} configs 请求配置项\n       */\n      return (urlData, params, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: GET, params, ...configs, ...moreConfigs })\n    },\n    restFulPost: function axiosServicePost (restFulUrl, requestOpts, moreConfigs) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: POST, data, ...configs, ...moreConfigs })\n    },\n    delete: function axiosServiceDelete (restFulUrl, requestOpts, moreConfigs) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: DELETE, data, ...configs, ...moreConfigs })\n    },\n    put: function axiosServicePut (restFulUrl, requestOpts, moreConfigs) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: PUT, data, ...configs, ...moreConfigs })\n    },\n    patch: function axiosServicePatch (restFulUrl, requestOpts, ...moreConfigs) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: PATCH, data, ...configs, ...moreConfigs })\n    },\n    head: function axiosServiceHead (url, requestOpts, ...moreConfigs) {\n      const request = wrapperRequest(requestOpts)\n      return configs => request({ url, method: HEAD, ...configs, ...moreConfigs })\n    },\n    options: function axiosServiceOptions (url, requestOpts, ...moreConfigs) {\n      const request = wrapperRequest(requestOpts)\n      return configs => request({ url, method: OPTIONS, ...configs, ...moreConfigs })\n    },\n    request: function axiosServiceRequest (url, requestOpts, ...moreConfigs) {\n      const request = wrapperRequest(requestOpts)\n      return configs => request({ url, ...configs, ...moreConfigs })\n    },\n    // todo\n    jsonp: function axiosServiceJsonp (url, requestOpts, ...moreConfigs) {\n\n    }\n  }\n\n  return requests\n}\n\n/**\n * 通过环境变量获取mock装饰器\n * @param {String} isDev 是否为开发环境\n * @return {Function}\n */\nexport const getMockDecoratorByEnv = isDev => {\n  /**\n   * mock装饰器\n   * @param {Function} mockFn mock的函数逻辑\n   * @return {Function}\n   */\n  return function mockDecorator (mockFn) {\n    /**\n     * 接口装饰器\n     * @param {Class|Function} 所装饰类的实例对象 | 所装饰器的函数\n     * @param {String|Undefined} property 属性的key名|Undefined\n     * @param {Object|Undefined} descriptor es6装饰器对象|Undefined\n     * @return {Object|Function} es6的装饰器对象|直接可执行函数\n     */\n    return function apiDecorator (target, property, descriptor) {\n      let apiFn\n      const applyApiWithEnv = (...args) => {\n        // 开发环境走mock, 如果需要关闭, 需要再apis种删除\n        if (isDev) {\n          return mockFn(...args)\n        } else {\n          return apiFn(...args)\n        }\n      }\n      if (!descriptor && typeof target === 'function') {\n        apiFn = target\n        return applyApiWithEnv\n      } else {\n        const initialFunc = descriptor.initializer || descriptor.value\n        apiFn = initialFunc() || (() => {})\n        descriptor.initializer = descriptor.value = _ => applyApiWithEnv\n        return descriptor\n      }\n    }\n  }\n}\n\nservice.getRequestsByRoot = getRequestsByRoot\n\n\nexport default service"],"sourceRoot":""}