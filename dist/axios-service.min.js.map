{"version":3,"sources":["webpack://axiosService/webpack/universalModuleDefinition","webpack://axiosService/webpack/bootstrap","webpack://axiosService/./src/config.js","webpack://axiosService/./src/utils.js","webpack://axiosService/./src/service.js","webpack://axiosService/./src/request-types.js","webpack://axiosService/./src/create.js","webpack://axiosService/./src/mock-decorator.js","webpack://axiosService/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","STATUS_200","defaults","defaultBaseConfig","isCreateInstance","requestDefaults","autoLoading","msgKey","dataKey","codeKey","successCode","isString","val","isNumber","isUndefined","isObject","_typeof","forEach","merge","result","assignValue","key","arguments","length","deepMerge","deepCopy","target","formatRestFulUrl","resfulUrl","undefined","urlData","keys","reduce","url","replace","joinRootAndPath","path","str","slashStartReplace","toString","isArray","obj","fn","extend","to","_from","logger","log","_console","_len","args","Array","_key","console","apply","concat","error","_console2","_len2","_key2","_config","_utils","Service","options","_classCallCheck","$http","createdRequestStack","createdAxiosInstanceStack","axiosInstance","setHttps","setDefaults","setRequestDefaults","_executeRequestInstance","_executeAxiosInstance","newConfig","_extends","newRequestOpts","_this","_this2","GET","POST","DELETE","OPTIONS","PUT","PATCH","HEAD","_requestTypes","_service","createAxiosService","service","responseDecorator","instance","requestOpts","_service$requestDefau","config","requestInfo","baseURL","params","data","then","response","status","apiRes","Promise","resolve","msg","code","reject","e","getRequestsByRoot","_handleAxiosInstances","baseConfigs","defaultBaseCopy","_extend","asyncAxiosInstance","$httpResolve","$httpReady","tid","setTimeout","getInstance","clearTimeout","create","push","getInstaceSync","_axiosInstance","getAxiosInstance","_","getAsyncAxiosInstance","handleAxiosInstances","requestConnect","request","_request","getRequest","requests","moreConfigs","configs","method","post","postXForm","transformRequest","formData","append","FormData","headers","Content-Type","restFulGet","restFulUrl","restFulPost","delete","put","patch","_len3","_key3","head","_len4","_key4","_len5","_key5","_len6","_key6","jsonp","restFulDelete","isDev","mockFn","descriptor","apiFn","applyApiWithEnv","initialFunc","initializer","default","axiosService","_create2"],"mappings":"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","file":"axios-service.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axiosService\"] = factory();\n\t//libaoxu\n\telse\n\t\troot[\"axiosService\"] = factory();\n})(typeof self !== \"undefined\" ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","\nexport const STATUS_200 = 200\n\nexport const defaults = {\n  // withCredentials: true\n}\n\nexport const defaultBaseConfig = {\n  root: '/',\n  isCreateInstance: false\n}\n\nexport const requestDefaults = {\n  // todo\n  autoLoading: true,\n  // server端请求msg\n  msgKey: 'error_msg',\n  // server端数据的key\n  dataKey: 'data',\n  // server端请求状态的key\n  codeKey: 'dm_error',\n  // server端请求成功的状态, 注意: 是服务端返回的状态码, 不是xhr在\b浏览器端的返回状态\n  successCode: 0 \n}","export const deepCopy = (target, ...source) => {\n\n}\n\n\nexport const formatRestFulUrl = (resfulUrl = '', urlData = {}) => \n  Object.keys(urlData || {})\n    .reduce((url, key) => url.replace(`$${key}`, urlData[key]), resfulUrl || '')\n    \nexport const joinRootAndPath = (root, path) => {\n  let slashStartReplace = str => str.replace(/^\\//, '') \n  let slashEndReplace = str => str.replace(/\\/$/, '') \n  return `${slashEndReplace(root)}/${slashStartReplace(path)}`\n}\n\n\nconst _toString = Object.prototype.toString\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nexport const isArray = function (val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nexport function isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nexport function isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nexport function isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nexport function isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nexport function forEach (obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /* eslint no-param-reassign:0 */\n    obj = [obj]\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn(obj[i], i, obj)\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn(obj[key], key, obj)\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nexport function merge(/* obj1, obj2, obj3, ... */) {\n  var result = {}\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val)\n    } else {\n      result[key] = val\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue)\n  }\n  return result\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nexport function deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {}\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val)\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val)\n    } else {\n      result[key] = val\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue)\n  }\n  return result\n}\n\n/**\n * Mix properties into target object.\n */\nexport const extend = function extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key]\n  }\n  return to\n}\n\nexport const logger = {\n  log (...args) {\n    /* eslint-disable no-console */\n    console.log('[axios-service]', ...args)\n    /* eslint-enable no-console */\n  },\n  error (...args) {\n    /* eslint-disable no-console */\n    console.error('[axios-service]', ...args)\n    /* eslint-enable no-console */\n  },\n}","import { codes, defaults, requestDefaults } from './config'\nimport { extend, deepMerge, merge } from './utils'\n\nexport default class Service {\n  constructor (options = {}) {\n    this.$http = null\n    this.requestDefaults = options.requestDefaults || {}\n    this.createdRequestStack = options.createdRequestStack || []\n    this.createdAxiosInstanceStack = options.createdAxiosInstanceStack || []\n  }\n  \n  // 注意, service实例初始化时候, 只创建对象, 不需要走init, init函数由外部初始化时候注入axisoInstance\n  init (axiosInstance, options = {}) {\n    this.setHttps(axiosInstance)\n    this.setDefaults(options.defaults)\n    this.setRequestDefaults(options.requestDefaults)\n    this._executeRequestInstance()\n    this._executeAxiosInstance()\n  }\n  \n  setHttps ($http) {\n    this.$http = $http || this.$http\n  }\n  \n  setDefaults (newConfig) {\n    extend(this.$http.defaults, { ...defaults, ...newConfig })\n  }\n  \n  setRequestDefaults (newRequestOpts = {}) {\n    extend(this.requestDefaults, newRequestOpts)\n  }\n\n  _executeRequestInstance () {\n    this.createdRequestStack.forEach(fn => fn(this.$http))\n  }\n\n  _executeAxiosInstance () {\n    this.createdAxiosInstanceStack.forEach(fn => fn(this.$http)) \n  }\n}","export const GET = 'get'\nexport const POST = 'post'\nexport const DELETE = 'delete'\nexport const OPTIONS = 'options'\nexport const PUT = 'put'\nexport const PATCH = 'patch'\nexport const HEAD = 'head'","/**\n * axios封装, 为了业务层更简洁实用, 不需要判断status 和 codeKey等重复逻辑\n * @author libaoxu\n * @date 2018-05-08\n */\nimport { GET, POST, PATCH, PUT, HEAD, DELETE, OPTIONS } from './request-types'\nimport { formatRestFulUrl, extend, joinRootAndPath, logger } from './utils'\nimport { STATUS_200, defaults, requestDefaults, UN_PRODUCTION, defaultBaseConfig } from './config'\nimport Service from './service'\n\n\nfunction createAxiosService () {\n  const service = new Service({\n    requestDefaults,\n    createdRequestStack: [],\n    createdAxiosInstanceStack: []\n  })\n  \n  /**\n   * axios实例的装饰器, 主要做响应拦截\n   * @param {Axios} instance axios实例\n   * @param {Object} requestOpts axiosService请求配置项, 包含状态检测等, 详见config.requestDefaults\n   */\n  const responseDecorator = function responseDecorator (instance, requestOpts) {\n    const { msgKey, codeKey, dataKey, successCode } = {\n      ...service.requestDefaults,\n      ...requestOpts,\n    }\n\n    /**\n     * 在请求开始和请求结束的, 把状态的判断等重复case做处理\n     * \n     * @param {any} config 请求的config\n     * @returns {Promise} 请求结果\n     * todo loading\n     */\n    return function request (config) {\n      const requestInfo = [`url: ${instance.baseURL}${config.url}`, ', params:', config.params, ', data:', config.data]\n\n      return instance(config)\n        .then(response => {\n          const { status, data: apiRes, config } = response\n\n          if (status === STATUS_200) {\n            // 如果不存在dataKey, 则不处理data相关的值, 仅将data返回回去\n            if (!dataKey) {\n              return Promise.resolve(apiRes)\n            }\n            let data = apiRes[dataKey]\n            let msg = apiRes[msgKey]\n            let code = apiRes[codeKey]\n\n            extend(apiRes, { data, msg, code })\n            \n            if (code === successCode) {\n              return Promise.resolve(apiRes)\n            } else {\n              logger.error(`请求错误: msg: ${msg}, code: ${code} `, ...requestInfo)\n              return Promise.reject(apiRes)\n            }\n          }\n        }, (e) => {\n          logger.error(`请求失败: `, ...requestInfo)\n          return Promise.reject(e)\n        })\n    }\n  }\n  const handleAxiosInstances = function handleAxiosInstances (baseConfigs) {\n    const defaultBaseCopy = extend({}, defaultBaseConfig)\n    const { root, isCreateInstance } = extend(defaultBaseCopy, baseConfigs)\n    let axiosInstance\n    let asyncAxiosInstance\n    let _request\n    let $httpResolve\n    let timeout = 3000\n    let $httpReady = new Promise((resolve, reject) => {\n      $httpResolve = resolve\n    })\n    \n    let tid = setTimeout(() => {\n      if (!axiosInstance) {\n        logger.error('请注入axios实例, 如: axiosService.init(axios, config)')\n      }\n    }, timeout)\n    \n    const getInstance = function getInstance () {\n      if (service.$http) {\n        clearTimeout(tid)\n        let instance\n\n        if (isCreateInstance) {\n          instance = service.$http.create({\n            baseURL: root,\n            ...baseConfigs\n          })\n        } else {\n          instance = config => service.$http({ ...config, url: joinRootAndPath(root, config.url) })\n        }\n        instance.baseURL = root\n\n        return instance\n      }\n    }\n\n    const getInstaceSync = function getInstaceSync () {\n      // 处理异步注入axioIntance的情况\n      if (!service.$http) {\n        service.createdAxiosInstanceStack.push($httpResolve)\n        return $httpReady.then(getInstance)\n      }\n    }\n\n    // 保证了, 同一个wrapperRequsetAdaptor, 只创建有一个axiosInstance\n    axiosInstance = getInstance()\n\n    if (!axiosInstance) {\n      // 异步注入axois情况, getInstance也是一次\n      asyncAxiosInstance = getInstaceSync()\n      asyncAxiosInstance.then((_axiosInstance) => {\n        axiosInstance = _axiosInstance\n      })\n    }\n\n    return {\n      getAxiosInstance: _ => axiosInstance,\n      getAsyncAxiosInstance: _ => asyncAxiosInstance,\n    }\n  }\n\n  const jsonWrapperRequest = function jsonWrapperRequest (baseConfigs) {\n    return function getRequest (config) {\n      \n    }\n  }\n\n  /**\n   * 根据根路径获取请求函数\n   * \n   * @param {any} baseConfigs axios的基础配置, \n   * @property {String} baseConfigs.root 根路劲\n   * @property {Boolean} baseConfigs.isCreateInstance 是否创建新实例, 即: axios.create\n   * \n   * @returns {Object} requests axios请求集合\n   */\n  const getRequestsByRoot = function getRequestsByRoot (baseConfigs = {}) {\n    // 第一步 获取通过init来注入的axios实例\n    const { getAxiosInstance, getAsyncAxiosInstance } = handleAxiosInstances(baseConfigs)\n    \n    // 第二步 根据每个不同请求配置的requestOpts获取具体request请求的包装器\n    const getRequest = function getRequest (requestOpts) {\n      let _request\n      const axiosInstance = getAxiosInstance()\n      const asyncAxiosInstance = getAsyncAxiosInstance()\n\n      if (axiosInstance) {\n        _request = responseDecorator(axiosInstance, requestOpts)\n      } else {\n        asyncAxiosInstance && asyncAxiosInstance.then((axiosInstance) => {\n          _request = responseDecorator(axiosInstance, requestOpts)\n        })\n      }\n\n      return function handleRequest (...params) {\n        if (_request) {\n          return _request(...params)\n        } else {\n          return asyncAxiosInstance.then(() => _request(...params))\n        }\n      }\n    }\n\n    // 具体请求的装饰器, requestOpts => request, 将外层的配置参数进行预处理, 保证requestProxy只直接收axios的config\n    const requestConnect = fn =>\n      /** \n       * \n       * @param {String} url 请求的url后缀\n       * @param {Object} requestOpts 请求的配置项, 详见config.js中的requestDefaults\n       * @param {Object} moreConfigs 该值为自定义的, axios-service不会处理, 该config值会透传到 axios中interceptors中的第一个参数\n       * @return {Function} fn执行结果\n       */\n      (url, requestOpts, ...args) => {\n        const request = getRequest(requestOpts)\n        return fn(url, request, ...args)\n      }\n\n    const requests = {\n      getAxiosInstance,\n      getAsyncAxiosInstance,\n      /**\n       * get请求的封装\n       * \n       * @returns {Function} 业务层做请求的函数\n       */\n      get: requestConnect(function axiosServiceGet (url, request, moreConfigs) {\n        /**\n         * @param {Object} params 即get请求需要的数据\n         * @param {Object} config 请求接口的配置项, 详见https://github.com/axios/axios#request-config\n         * 注意: get请求, 第一个参数传params, \n         */\n        return (params, configs) => request({ url, method: GET, params, ...configs, ...moreConfigs })\n      }),\n      post: requestConnect(function axiosServicePost (url, request, moreConfigs) {\n        /**\n         * @param {Object} data 即post请求需要的数据\n         * 注意: post请求, 第一个参数传data\n         */\n        return (data, configs) => request({ url, method: POST, data, ...configs, ...moreConfigs })\n      }),\n      postXForm: requestConnect(function axiosServicePostXForm (url, request, moreConfigs) {\n        return (data, configs = {}) => {\n          return request({ \n            url, \n            method: POST, \n            data,\n            transformRequest: [function (data = {}, headers) {\n              // if (typeof window === 'undefined') {\n              //   console.error('application/x-www-form-urlencoded类型, 请在客户端请求, url:', url)\n              // }\n    \n              return Object.keys(data)\n                .reduce((formData, key) => {\n                  formData.append(key, data[key])\n                  return formData\n                }, new FormData())\n            }], \n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded',\n              ...configs.headers\n            },\n            ...configs,\n            ...moreConfigs\n          })\n        }\n      }),\n      /**\n       * resFul用的get请求\n       * \n       * @param {String} restFulUrl 请求的url, 且与上面的url配置有区别, 详见readme.md\n       * @param {Object} requestOpts 请求配置项\n       * @returns {Function} 具体请求的函数\n       */\n      restFulGet: requestConnect(function axiosServiceRestFulGet (restFulUrl, request, moreConfigs) {\n        /**\n         * @param {Object} urlData restFul中需要替换url的值, 拼接的过程serviceProxy会处理\n         * @param {Object} params \n         * @param {Object} configs 请求配置项\n         */\n        return (urlData, params, configs) => \n          request({ url: formatRestFulUrl(restFulUrl, urlData), method: GET, params, ...configs, ...moreConfigs })\n      }),\n      restFulPost: requestConnect(function axiosServicePost (restFulUrl, request, moreConfigs) {\n        return (urlData, data, configs) => \n          request({ url: formatRestFulUrl(restFulUrl, urlData), method: POST, data, ...configs, ...moreConfigs })\n      }),\n      delete: requestConnect(function axiosServiceDelete (restFulUrl, request, moreConfigs) {\n        return (urlData, data, configs) => \n          request({ url: formatRestFulUrl(restFulUrl, urlData), method: DELETE, data, ...configs, ...moreConfigs })\n      }),\n      put: requestConnect(function axiosServicePut (restFulUrl, request, moreConfigs) {\n        return (urlData, data, configs) => \n          request({ url: formatRestFulUrl(restFulUrl, urlData), method: PUT, data, ...configs, ...moreConfigs })\n      }),\n      patch: requestConnect(function axiosServicePatch (restFulUrl, request, ...moreConfigs) {\n        return (urlData, data, configs) => \n          request({ url: formatRestFulUrl(restFulUrl, urlData), method: PATCH, data, ...configs, ...moreConfigs })\n      }),\n      head: requestConnect(function axiosServiceHead (url, request, ...moreConfigs) {\n        return configs => request({ url, method: HEAD, ...configs, ...moreConfigs })\n      }),\n      options: requestConnect(function axiosServiceOptions (url, request, ...moreConfigs) {\n        return configs => request({ url, method: OPTIONS, ...configs, ...moreConfigs })\n      }),\n      request: requestConnect(function axiosServiceRequest (url, request, ...moreConfigs) {\n        return configs => request({ url, ...configs, ...moreConfigs })\n      }),\n      // todo\n      jsonp: requestConnect(function axiosServiceJsonp (url, request, ...moreConfigs) {\n\n      })\n    }\n    \n    requests.restFulDelete = requests.delete\n\n    return requests\n  }\n\n  service.getRequestsByRoot = getRequestsByRoot\n  service.create = createAxiosService\n\n  return service\n}\n\nexport default createAxiosService","/**\n * 通过环境变量获取mock装饰器\n * @param {String} isDev 是否为开发环境\n * @return {Function}\n */\nexport default function getMockDecoratorByEnv (isDev) {\n  /**\n   * mock装饰器\n   * @param {Function} mockFn mock的函数逻辑\n   * @return {Function}\n   */\n  return function mockDecorator (mockFn) {\n    /**\n     * 接口装饰器\n     * @param {Class|Function} 所装饰类的实例对象 | 所装饰器的函数\n     * @param {String|Undefined} property 属性的key名|Undefined\n     * @param {Object|Undefined} descriptor es6装饰器对象|Undefined\n     * @return {Object|Function} es6的装饰器对象|直接可执行函数\n     */\n    return function apiDecorator (target, property, descriptor) {\n      let apiFn\n      const applyApiWithEnv = (...args) => {\n        // 开发环境走mock, 如果需要关闭, 需要再apis种删除\n        if (isDev) {\n          return mockFn(...args)\n        } else {\n          return apiFn(...args)\n        }\n      }\n      if (!descriptor && typeof target === 'function') {\n        apiFn = target\n        return applyApiWithEnv\n      } else {\n        const initialFunc = descriptor.initializer || descriptor.value\n        apiFn = initialFunc() || (() => {})\n        descriptor.initializer = descriptor.value = _ => applyApiWithEnv\n        return descriptor\n      }\n    }\n  }\n}","/**\n * axios封装, 为了业务层更简洁实用, 不需要判断status 和 codeKey等重复逻辑\n * @author libaoxu\n * @date 2018-05-08\n */\nimport createAxiosService from './create'\n\nexport { default as getMockDecoratorByEnv } from './mock-decorator'\n\nconst axiosService = createAxiosService()\n\nexport {\n  createAxiosService,\n}\n\nexport const getRequestsByRoot = axiosService.getRequestsByRoot\n\nexport default axiosService"],"sourceRoot":""}