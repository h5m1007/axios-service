{"version":3,"sources":["webpack://axiosService/webpack/universalModuleDefinition","webpack://axiosService/webpack/bootstrap","webpack://axiosService/./src/config.js","webpack://axiosService/./src/utils.js","webpack://axiosService/./src/service.js","webpack://axiosService/./src/request-types.js","webpack://axiosService/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","STATUS_200","defaults","requestDefaults","autoLoading","msgKey","dataKey","codeKey","successCode","isString","val","isNumber","isUndefined","isObject","_typeof","forEach","merge","result","assignValue","key","arguments","length","deepMerge","deepCopy","target","formatRestFulUrl","resfulUrl","undefined","urlData","keys","reduce","url","replace","toString","isArray","obj","fn","extend","to","_from","_config","_utils","Service","options","_classCallCheck","$http","createdRequestStack","axiosInstance","setHttps","setDefaults","setRequestDefaults","_executeRequestInstance","newConfig","_extends","newRequestOpts","_this","GET","POST","DELETE","OPTIONS","PUT","PATCH","HEAD","_requestTypes","_service","service","wrapperRequsetAdaptor","baseConfigs","_baseConfigs$root","_request","$httpResolve","$httpReady","Promise","resolve","reject","tid","setTimeout","console","error","createInstance","requestOpts","clearTimeout","instance","create","baseURL","_service$requestDefau","opts","requestInfo","params","data","then","response","status","apiRes","config","_console","errMsg","code","__response__","apply","concat","e","_console2","getWrapperRequest","push","_len","Array","_key","getRequestsByRoot","wrapperRequest","request","configs","method","post","postXForm","transformRequest","headers","formData","append","FormData","Content-Type","restFulGet","restFulUrl","restFulPost","delete","put","patch","head","jsonp"],"mappings":"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","file":"axios-service.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axiosService\"] = factory();\n\t//libaoxu\n\telse\n\t\troot[\"axiosService\"] = factory();\n})(typeof self !== \"undefined\" ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","\nexport const STATUS_200 = 200\n\nexport const defaults = {\n  // withCredentials: true\n}\n\nexport const requestDefaults = {\n  // todo\n  autoLoading: true,\n  // server端请求msg\n  msgKey: 'error_msg',\n  // server端数据的key\n  dataKey: 'data',\n  // server端请求状态的key\n  codeKey: 'dm_error',\n  // server端请求成功的状态, 注意: 是服务端返回的状态码, 不是xhr在\b浏览器端的返回状态\n  successCode: 0 \n}","export const deepCopy = (target, ...source) => {\n\n}\n\n\nexport const formatRestFulUrl = (resfulUrl = '', urlData = {}) => \n  Object.keys(urlData || {})\n    .reduce((url, key) => url.replace(`$${key}`, urlData[key]), resfulUrl || '')\n    \n\nconst _toString = Object.prototype.toString\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nexport const isArray = function (val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nexport function isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nexport function isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nexport function isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nexport function isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nexport function forEach (obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj]\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj)\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj)\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nexport function merge(/* obj1, obj2, obj3, ... */) {\n  var result = {}\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val)\n    } else {\n      result[key] = val\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue)\n  }\n  return result\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nexport function deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {}\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val)\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val)\n    } else {\n      result[key] = val\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue)\n  }\n  return result\n}\n\n/**\n * Mix properties into target object.\n */\nexport const extend = function extend (to, _from) {\n for (var key in _from) {\n   to[key] = _from[key]\n }\n return to\n}","import { codes, defaults, requestDefaults } from './config'\nimport { extend, deepMerge, merge } from './utils'\n\nexport default class Service {\n  constructor (options = {}) {\n    this.$http = null\n    this.requestDefaults = options.requestDefaults\n    this.createdRequestStack = options.createdRequestStack\n  }\n  \n  // 注意, service实例初始化时候, 只创建对象, 不需要走init, init函数由外部初始化时候注入axisoInstance\n  init (axiosInstance, options = {}) {\n    this.setHttps(axiosInstance)\n    this.setDefaults(options.defaults)\n    this.setRequestDefaults(options.requestDefaults)\n    this._executeRequestInstance()\n  }\n  \n  setHttps ($http) {\n    this.$http = $http || this.$http\n  }\n  \n  setDefaults (newConfig) {\n    // todo deepCopy\n    deepMerge(this.$http.defaults, { ...defaults, ...newConfig })\n  }\n  \n  setRequestDefaults (newRequestOpts = {}) {\n    extend(this.requestDefaults, newRequestOpts)\n  }\n\n  _executeRequestInstance () {\n    this.createdRequestStack.forEach(fn => fn(this.$http))\n  }\n}","export const GET = 'get'\nexport const POST = 'post'\nexport const DELETE = 'delete'\nexport const OPTIONS = 'options'\nexport const PUT = 'put'\nexport const PATCH = 'patch'\nexport const HEAD = 'head'","/**\n * axios封装, 为了业务层更简洁实用, 不需要判断status 和 codeKey等重复逻辑\n * @author libaoxu\n * @date 2018-05-08\n */\nimport { GET, POST, PATCH, PUT, HEAD, DELETE, OPTIONS } from './request-types'\nimport { formatRestFulUrl } from './utils'\nimport { STATUS_200, defaults, requestDefaults } from './config'\nimport Service from './service'\n\nexport const service = new Service({\n  requestDefaults,\n  createdRequestStack: []\n})\n\nconst getWrapperRequest = function getWrapperRequest (instance) {\n  return function wrapperRequest (requestOpts) {\n    const { autoLoading, msgKey, codeKey, dataKey, successCode } = {\n      ...service.requestDefaults,\n      ...requestOpts,\n    }\n\n    /**\n     * 请求开始和请求结束的封装, 把状态的判断等重复case做处理\n     * \n     * @param {any} opts 请求的config\n     * @returns {Promise} 请求结果\n     * todo loading\n     */\n    return function request (opts) {\n      const requestInfo =  [`url: ${instance.baseURL}${opts.url}`, ', params:', opts.params, ', data:', opts.data]\n\n      return instance(opts)\n        .then(response => {\n          const { status, data: apiRes, config } = response\n\n          if (status === STATUS_200) {\n            // 如果不存在dataKey, 则不处理data相关的值, 仅将data返回回去\n            if (!dataKey) {\n              return Promise.resolve(apiRes)\n            }\n            let data = apiRes[dataKey]\n            let errMsg = apiRes[msgKey]\n            let code = apiRes[codeKey]\n\n            apiRes.__response__ = response\n            \n            if (code === successCode) {\n              return Promise.resolve(apiRes)\n            } else {\n              console.error(`[service请求错误], errMsg: ${errMsg}, `, ...requestInfo)\n              return Promise.reject(apiRes)\n            }\n          }\n        }, (e) => {\n          console.error(`[service请求失败]: `, ...requestInfo)\n          return Promise.reject(e)\n        \n        })\n    }\n  }\n}\n\nconst wrapperRequsetAdaptor = function wrapperRequsetAdaptor (baseConfigs) {\n  const { root = '/' } = baseConfigs\n  let _request\n  let $httpResolve\n  let timeout = 3000\n  let $httpReady = new Promise((resolve, reject) => {\n    $httpResolve = resolve\n  })\n  \n  let tid = setTimeout(() => {\n    if (!_request) {\n      console.error('请注入axios实例, 如: axiosService.init(axios, config)')\n    }\n  }, timeout)\n  \n  const createInstance = function createInstance (requestOpts) {\n    clearTimeout(tid)\n    let instance = service.$http.create({\n      baseURL: root,\n      ...baseConfigs\n    })\n    instance.baseURL = root\n    return _request = getWrapperRequest(instance)(requestOpts)\n  }\n\n  return function wrapperRequest (requestOpts) {\n    if (service.$http) {\n      return createInstance(requestOpts)\n    } else {\n      // 处理异步注入axioIntance的情况\n      $httpReady.then(() => {\n        createInstance(requestOpts)\n      })\n      service.createdRequestStack.push($httpResolve)\n      return function requestDecorator (...params) {\n        if (_request) {\n          return _request(...params)\n        } else {\n          return $httpReady.then(() => _request(...params))\n        }\n      } \n    }\n  }\n}\n\nconst jsonWrapperRequest = function jsonWrapperRequest (baseConfigs) {\n  return function wrapperRequest (opts) {\n    \n  }\n}\n\n/**\n * 根据根路径获取请求函数\n * \n * @param {any} baseConfigs axios的基础配置, 详见https://github.com/axios/axios#creating-an-instance\n * @returns {Object} requests axios请求集合\n */\nexport const getRequestsByRoot = function getRequestsByRoot (baseConfigs = {}) {\n  const wrapperRequest = wrapperRequsetAdaptor(baseConfigs)\n\n  const requests = {\n    /**\n     * get请求的封装\n     * \n     * @param {String} url 请求的url后缀\n     * @param {Object} requestOpts 请求的配置项, 详见config.js中的requestDefaults\n     * @returns {Function} 业务层做请求的函数\n     */\n    get: function axiosServiceGet (url, requestOpts) { \n      const request = wrapperRequest(requestOpts)\n      /**\n       * @param {Object} params 即get请求需要的数据\n       * @param {Object} config 请求接口的配置项, 详见https://github.com/axios/axios#request-config\n       * 注意: get请求, 第一个参数传params, \n       */\n      return (params, configs) => request({ url, method: GET, params, ...configs })\n    },\n    post: function axiosServicePost (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      /**\n       * @param {Object} data 即post请求需要的数据\n       * 注意: post请求, 第一个参数传data\n       */\n      return (data, configs) => request({ url, method: POST, data, ...configs })\n    },\n    postXForm: function axiosServicePostXForm (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (data, configs = {}) => {\n        return request({ \n          url, \n          method: POST, \n          data,\n          transformRequest: [function (data, headers) {\n            // if (typeof window === 'undefined') {\n            //   console.error('application/x-www-form-urlencoded类型, 请在客户端请求, url:', url)\n            // }\n  \n            return Object.keys(data)\n              .reduce((formData, key) => {\n                formData.append(key, data[key])\n                return formData\n              }, new FormData())\n          }], \n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            ...configs.headers\n          },\n          ...configs\n        })\n      }\n    },\n    /**\n     * resFul用的get请求\n     * \n     * @param {String} restFulUrl 请求的url, 且与上面的url配置有区别, 详见readme.md\n     * @param {Object} requestOpts 请求配置项\n     * @returns {Function} 具体请求的函数\n     */\n    restFulGet: function axiosServiceRestFulGet (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      /**\n       * @param {Object} urlData restFul中需要替换url的值, 拼接的过程serviceProxy会处理\n       * @param {Object} params \n       * @param {Object} configs 请求配置项\n       */\n      return (urlData, params, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: GET, params, ...configs })\n    },\n    restFulPost: function axiosServicePost (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: POST, data, ...configs })\n    },\n    delete: function axiosServiceDelete (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: DELETE, data, ...configs })\n    },\n    put: function axiosServicePut (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: PUT, data, ...configs })\n    },\n    patch: function axiosServicePatch (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: PATCH, data, ...configs })\n    },\n    head: function axiosServiceHead (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return configs => request({ url, method: HEAD, ...configs })\n    },\n    options: function axiosServiceOptions (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return configs => request({ url, method: OPTIONS, ...configs })\n    },\n    request: function axiosServiceRequest (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return configs => request({ url, ...configs })\n    },\n    // todo\n    jsonp: function axiosServiceJsonp (url, requestOpts) {\n\n    }\n  }\n\n  return requests\n}\n\nservice.getRequestsByRoot = getRequestsByRoot\n\nexport default service"],"sourceRoot":""}