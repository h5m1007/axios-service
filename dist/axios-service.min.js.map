{"version":3,"sources":["webpack://axiosService/webpack/universalModuleDefinition","webpack://axiosService/webpack/bootstrap","webpack://axiosService/./src/config.js","webpack://axiosService/./src/service.js","webpack://axiosService/./src/utils.js","webpack://axiosService/./src/request-types.js","webpack://axiosService/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","codes","SUCCESS","defaults","requestDefaults","autoLoading","msgKey","dataKey","codeKey","successNo","_config","Service","options","arguments","length","undefined","_classCallCheck","$http","createdRequestStack","axiosInstance","setHttps","setDefaults","setRequestDefaults","_executeRequestInstance","newConfig","assign","_extends","newRequestOpts","_this","forEach","fn","deepCopy","target","formatRestFulUrl","resfulUrl","urlData","keys","reduce","url","key","replace","GET","POST","DELETE","OPTIONS","PUT","PATCH","HEAD","_requestTypes","_utils","_service","service","wrapperRequsetAdaptor","baseConfigs","_baseConfigs$root","_request","$httpResolve","$httpReady","Promise","resolve","reject","tid","setTimeout","console","error","createInstance","requestOpts","clearTimeout","instance","create","baseURL","_service$requestDefau","opts","requestInfo","params","data","then","response","status","apiRes","config","_console","errMsg","code","__response__","apply","concat","e","_console2","getWrapperRequest","push","_len","Array","_key","getRequestsByRoot","wrapperRequest","request","configs","method","post","postXForm","transformRequest","headers","formData","append","FormData","Content-Type","restFulGet","restFulUrl","restFulPost","delete","put","patch","head"],"mappings":"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","file":"axios-service.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axiosService\"] = factory();\n\t//libaoxu\n\telse\n\t\troot[\"axiosService\"] = factory();\n})(typeof self !== \"undefined\" ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","\nexport const codes = {\n  SUCCESS: 200\n}\n\nexport const defaults = {\n  // withCredentials: true\n}\n\nexport const requestDefaults = {\n  autoLoading: true,\n  // server端请求msg\n  msgKey: 'error_msg',\n  // server端数据的key\n  dataKey: 'data',\n  // server端请求状态的key\n  codeKey: 'dm_error',\n  // 浏览器请求成功的状态\n  successNo: 0 \n}","import { codes, defaults, requestDefaults } from './config'\n\nexport default class Service {\n  constructor (options = {}) {\n    this.$http = null\n    this.requestDefaults = options.requestDefaults\n    this.createdRequestStack = options.createdRequestStack\n  }\n  \n  // 注意, service实例初始化时候, 只创建对象, 不需要走init, init函数由外部初始化时候注入axisoInstance\n  init (axiosInstance, options = {}) {\n    this.setHttps(axiosInstance)\n    this.setDefaults(options.defaults)\n    this.setRequestDefaults(options.requestDefaults)\n    this._executeRequestInstance()\n  }\n  \n  setHttps ($http) {\n    this.$http = $http || this.$http\n  }\n  \n  setDefaults (newConfig) {\n    // todo deepCopy\n    Object.assign(this.$http.defaults, { ...defaults, ...newConfig })\n  }\n  \n  setRequestDefaults (newRequestOpts = {}) {\n    Object.assign(this.requestDefaults, newRequestOpts)\n  }\n\n  _executeRequestInstance () {\n    this.createdRequestStack.forEach(fn => fn(this.$http))\n  }\n}","export const deepCopy = (target, ...source) => {\n\n}\n\nexport const formatRestFulUrl = (resfulUrl = '', urlData = {}) => \n  Object.keys(urlData || {})\n    .reduce((url, key) => url.replace(`$${key}`, urlData[key]), resfulUrl || '')","export const GET = 'get'\nexport const POST = 'post'\nexport const DELETE = 'delete'\nexport const OPTIONS = 'options'\nexport const PUT = 'put'\nexport const PATCH = 'patch'\nexport const HEAD = 'head'","/**\n * axios封装, 为了业务层更简洁实用, 不需要判断status 和 codeKey等重复逻辑\n * @author libx@inke.cn\n * @date 2018-05-08\n */\nimport { GET, POST, PATCH, PUT, HEAD, DELETE, OPTIONS } from './request-types'\nimport { formatRestFulUrl } from './utils'\nimport { codes, defaults, requestDefaults } from './config'\nimport Service from './service'\n\nexport const service = new Service({\n  requestDefaults,\n  createdRequestStack: []\n})\n\nconst getWrapperRequest = function getWrapperRequest (instance) {\n  return function wrapperRequest (requestOpts) {\n    const { autoLoading, msgKey, codeKey, dataKey, successNo } = {\n      ...service.requestDefaults,\n      ...requestOpts,\n    }\n\n    /**\n     * 请求开始和请求结束的封装, 把状态的判断等重复case做处理\n     * \n     * @param {any} opts 请求的config\n     * @returns {Promise} 请求结果\n     * todo loading\n     */\n    return function request (opts) {\n      const requestInfo =  [`url: ${instance.baseURL}${opts.url}`, ', params:', opts.params, ', data:', opts.data]\n\n      return instance(opts)\n        .then(response => {\n          const { status, data: apiRes, config } = response\n\n          if (status === codes.SUCCESS) {\n            // 如果不存在dataKey, 则不处理data相关的值, 仅将data返回回去\n            if (!dataKey) {\n              return Promise.resolve(apiRes)\n            }\n            let data = apiRes[dataKey]\n            let errMsg = apiRes[msgKey]\n            let code = apiRes[codeKey]\n\n            apiRes.__response__ = response\n            \n            if (code === successNo) {\n              return Promise.resolve(apiRes)\n            } else {\n              console.error(`[service请求错误], errMsg: ${errMsg}, `, ...requestInfo)\n              return Promise.reject(apiRes)\n            }\n          }\n        }, (e) => {\n          console.error(`[service请求失败]: `, ...requestInfo)\n          return Promise.reject(e)\n        \n        })\n    }\n  }\n}\n\nconst wrapperRequsetAdaptor = function wrapperRequsetAdaptor (baseConfigs) {\n  const { root = '/' } = baseConfigs\n  let _request\n  let $httpResolve\n  let timeout = 3000\n  let $httpReady = new Promise((resolve, reject) => {\n    $httpResolve = resolve\n  })\n  \n  let tid = setTimeout(() => {\n    if (!_request) {\n      console.error('请注入axios实例, 如: axiosService.init(axios, config)')\n    }\n  }, timeout)\n  \n  const createInstance = function createInstance (requestOpts) {\n    clearTimeout(tid)\n    let instance = service.$http.create({\n      baseURL: root,\n      ...baseConfigs\n    })\n    instance.baseURL = root\n    return _request = getWrapperRequest(instance)(requestOpts)\n  }\n\n  return function wrapperRequest (requestOpts) {\n    if (service.$http) {\n      return createInstance(requestOpts)\n    } else {\n      // 处理异步注入axioIntance的情况\n      $httpReady.then(() => {\n        createInstance(requestOpts)\n      })\n      service.createdRequestStack.push($httpResolve)\n      return function requestDecorator (...params) {\n        if (_request) {\n          return _request(...params)\n        } else {\n          return $httpReady.then(() => _request(...params))\n        }\n      } \n    }\n  }\n}\n\n/**\n * 根据根路径获取请求函数\n * \n * @param {any} baseConfigs axios的基础配置, 详见https://github.com/axios/axios#creating-an-instance\n * @returns {Object} requests axios请求集合\n */\nexport const getRequestsByRoot = function getRequestsByRoot (baseConfigs = {}) {\n  const wrapperRequest = wrapperRequsetAdaptor(baseConfigs)\n\n  const requests = {\n    /**\n     * get请求的封装\n     * \n     * @param {String} url 请求的url后缀\n     * @param {Object} requestOpts 请求的配置项, 详见config.js中的requestDefaults\n     * @returns {Function} 业务层做请求的函数\n     */\n    get: function axiosServiceGet (url, requestOpts) { \n      const request = wrapperRequest(requestOpts)\n      /**\n       * @param {Object} params 即get请求需要的数据\n       * @param {Object} config 请求接口的配置项, 详见https://github.com/axios/axios#request-config\n       * 注意: get请求, 第一个参数传params, \n       */\n      return (params, configs) => request({ url, method: GET, params, ...configs })\n    },\n    post: function axiosServicePost (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      /**\n       * @param {Object} data 即post请求需要的数据\n       * 注意: post请求, 第一个参数传data\n       */\n      return (data, configs) => request({ url, method: POST, data, ...configs })\n    },\n    postXForm: function axiosServicePostXForm (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (data, configs = {}) => {\n        return request({ \n          url, \n          method: POST, \n          data,\n          transformRequest: [function (data, headers) {\n            // if (typeof window === 'undefined') {\n            //   console.error('application/x-www-form-urlencoded类型, 请在客户端请求, url:', url)\n            // }\n  \n            return Object.keys(data)\n              .reduce((formData, key) => {\n                formData.append(key, data[key])\n                return formData\n              }, new FormData())\n          }], \n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            ...configs.headers\n          },\n          ...configs\n        })\n      }\n    },\n    /**\n     * resFul用的get请求\n     * \n     * @param {String} restFulUrl 请求的url, 且与上面的url配置有区别, 详见readme.md\n     * @param {Object} requestOpts 请求配置项\n     * @returns {Function} 具体请求的函数\n     */\n    restFulGet: function axiosServiceRestFulGet (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      /**\n       * @param {Object} urlData restFul中需要替换url的值, 拼接的过程serviceProxy会处理\n       * @param {Object} params \n       * @param {Object} configs 请求配置项\n       */\n      return (urlData, params, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: GET, params, ...configs })\n    },\n    restFulPost: function axiosServicePost (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: POST, data, ...configs })\n    },\n    delete: function axiosServiceDelete (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: DELETE, data, ...configs })\n    },\n    put: function axiosServicePut (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: PUT, data, ...configs })\n    },\n    patch: function axiosServicePatch (restFulUrl, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return (urlData, data, configs) => \n        request({ url: formatRestFulUrl(restFulUrl, urlData), method: PATCH, data, ...configs })\n    },\n    head: function axiosServiceHead (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return configs => request({ url, method: HEAD, ...configs })\n    },\n    options: function axiosServiceOptions (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return configs => request({ url, method: OPTIONS, ...configs })\n    },\n    request: function axiosServiceRequest (url, requestOpts) {\n      const request = wrapperRequest(requestOpts)\n      return configs => request({ url, ...configs })\n    }\n  }\n\n  return requests\n}\n\nservice.getRequestsByRoot = getRequestsByRoot\n\nexport default service"],"sourceRoot":""}